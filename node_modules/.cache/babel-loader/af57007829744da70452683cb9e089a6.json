{"remainingRequest":"C:\\Users\\q.samaya\\Desktop\\js-framework_tut\\MIS_for_testing\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\q.samaya\\Desktop\\js-framework_tut\\MIS_for_testing\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\q.samaya\\Desktop\\js-framework_tut\\MIS_for_testing\\src\\store\\modules\\newagreement.js","dependencies":[{"path":"C:\\Users\\q.samaya\\Desktop\\js-framework_tut\\MIS_for_testing\\src\\store\\modules\\newagreement.js","mtime":1626350599893},{"path":"C:\\Users\\q.samaya\\Desktop\\js-framework_tut\\MIS_for_testing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\js-framework_tut\\MIS_for_testing\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\js-framework_tut\\MIS_for_testing\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/q.samaya/Desktop/js-framework_tut/MIS_for_testing/src/store/modules/newagreement.js"],"names":["i18n","axios","getField","updateField","state","conType","comboData","translations","formContract","ViewOperations","token","localStorage","getItem","loginuser","JSON","parse","position","roles","userRoles","orgs","newagreement","historyCont","oneCont","search","search_dialog","workers","usersdata","recivers","newuser","roleid","secretUserlg","secretUserpass","user_tasks","mainOrgs","dictionary","contractType","contractLiability","town","country","region","tasktype","dicByCode","sellers","feeTarifs","payments","payplan","files","tasksCount","closeOnContentClick","orgUnitType","suborgs","view_components","contractProcessState","searchedContract","getters","alltranslations","loggedIn","getuserRoles","allnewagreement","formData","historyContract","allformContract","filteredagreements","filter","contract","createdByPersonnelName","createdByPersonnelPatronymic","createdByPersonnelSurname","sellerPersonnelName","sellerPersonnelPatronymic","sellerPersonnelSurname","contractNumber","contractDate","contractTypeDescription","toLowerCase","match","toString","filteredworkers","worker","name","surname","birthDate","entranceDate","allworkers","filteredusers","userdata","loginId","personnelSurname","personnelName","personnelPatronymic","filteredViewOperations","item","breadcrumbLabel","charCodeAt","substring","allusers","allrecivers","secretuserlg","secretuser","allPosition","allRoles","allOrgs","allmainOrgs","alldictionary","alldicbycode","allcontracttype","allcontractliability","alltown","allcountry","allregion","alltasktype","allsellers","allfeeTarifs","allpayments","allpayplan","allViewOperations","allDocuments","alluser_tasks","alltasksCount","allorgUnitType","allsuborgs","allview_components","allcontractProcessState","allsearchedContract","mutations","setuser_tasks","settasksCount","viewComponents","retrieveToken","retrieveUserinfo","i","destroyToken","destroyUserinfo","setNewagreement","setContracts","oneContract","contractHistory","newContractdata","push","updateCont","index","findIndex","id","splice","updateSearch","updateSearchDialog","updateCombo","updateType","removeContract","agr","setWorkers","newWorkerdata","updateWorkerdata","setUsers","conRecivers","newUserdata","user","removeUser","addRole","role","updRole","setPosition","addPosition","pos","setRoles","setOrgs","setSubOrgs","setmainOrgs","setDictionary","setContractType","setContractProcessState","setContractLiability","setCityTown","setCountry","setRegion","setOrganizationUnitType","setTaskType","setDictionaryByCode","newDicItem","newitem","removeDicItem","setSellers","newSellerdata","seller","removeSeller","setFeeTariffs","newFeeTariffdata","fee","removeFeeTariff","setUserRoles","addUserRole","removeUserRole","userRole","getPayment","crtPayment","payment","updPayment","getPaymentPlan","crtPaymentPlan","updPaymentPlan","removePayPlan","plan","setDocuments","addDocument","file","removeDocument","actions","userTasks","context","userId","defaults","headers","common","get","response","commit","data","unViewedTasksCount","unComTasksView","obj","post","getViewOperations","getForms","getViewComponents","viewComponentId","commandList","getDefaultLanguage","getTranslationsById","languageId","getTranslationsByResourceType","resourceType","changePassword","put","resetPassword","Promise","resolve","reject","then","removeItem","catch","error","credentials","locale","accessToken","setItem","stringify","permananentPass","checkSession","getSearchData","paramsData","qs","require","params","registrationNumberSearchText","contractDateBegin","contractDateEnd","soldAssetAddressAddressSearchText","contractNumberSearchText","filterDebtorsOnly","soldAssetNameSearchText","buyerNameSearchText","buyerSurnameSearchText","buyerPatronymicSearchText","processStatus","contractTypeIdSearch","paramsSerializer","arrayFormat","fetchContracts","actionQueryString","addNewagreement","getContract","contractId","setContractViewedByUser","getContractReceivers","updateContract","getContractHistory","deleteContract","delete","switchOnlyStatus","fetchContractDocuments","addContractDocuments","deleteDocument","documentId","downloadContractDocument","fetchDictionary","fetchDictionaryByCode","dictionaryCode","itemList","addNewDicCodeItem","deleteDictionaryItem","dictionaryItemId","fetchContType","fetchContractProcessState","fetchContractLiability","fetchCity","fetchCountry","fetchRegion","fetchOrganizationUnitType","addOrganizationUnit","organizationUnitCreateRequest","fetchContractTaskType","fetchSellers","addSeller","deleteSeller","sellerId","fetchFeeTariffs","addFeeTariffs","deleteFeeTariffs","feeTariffId","cancelContract","completeContract","completeRequest","recoverContract","sendContract","contractSendRequest","fetchPayment","createPayment","updatePayment","paymentId","fetchPaymentPlan","createPaymentPlan","updatePaymentPlan","paymentPlanId","deletePayPlan","fetchWorkers","addWorker","updateWorker","personnelId","leaveWorker","fetchPosition","fetchPositionCombo","cancelPersonnelPos","personnelPositionId","fetchUsers","addUser","roleId","fetchUserRoles","addUserRoles","deleteUserRoles","ids","roleIds","updateRole","updateGrantRole","fetchRoles","fetchRoleById","fetchMainOrgs","fetchUnitOrgs","fetchSubOrgs","organizationId","updateOrgs","updateUnitOrgs","organizationUnitId","cancelUnitOrgs"],"mappings":"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","sourcesContent":["import i18n from \"../../i18n\";\r\nimport axios from 'axios';\r\nimport { getField, updateField } from 'vuex-map-fields'; \r\nconst state = {\r\n  conType:null,\r\n  comboData:{},\r\n  translations:[],\r\n  formContract:[],\r\n  ViewOperations:[],\r\n   //login\r\n  token: localStorage.getItem('accessToken') || null, \r\n  loginuser:JSON.parse(localStorage.getItem('userinfo')) || null,\r\n  //filters\r\n   position:[],\r\n   roles:[],\r\n   userRoles:[],\r\n   orgs:[],\r\n  //main\r\n  newagreement: [],\r\n  historyCont:[],\r\n  oneCont: [],\r\n  search:\"\",\r\n  search_dialog:\"\",\r\n   //workers   \r\n    workers:[],\r\n   \r\n    //users\r\n    usersdata:[],\r\n    recivers:[],\r\n    newuser:{\r\n      roleid:'',\r\n    }, \r\n    secretUserlg:'',\r\n    secretUserpass:'',\r\n\r\n    user_tasks:[],\r\n    //organizations\r\n    mainOrgs:[],\r\n    //dictionary\r\n    dictionary:[],\r\n    contractType:[],\r\n    contractLiability:[],\r\n    town:[],\r\n    country:[],\r\n    region:[],\r\n     tasktype:[],\r\n    dicByCode:[],\r\n    //sellers\r\n    sellers:[],\r\n    //feetarifs\r\n    feeTarifs:[],\r\n    //payment\r\n    payments:[],\r\n    payplan:[],\r\n    files:[],\r\n    tasksCount:null,\r\n    closeOnContentClick:false,\r\n    orgUnitType:[],\r\n    suborgs:[],\r\n    view_components:[],\r\n    contractProcessState:[],\r\n    searchedContract:[]\r\n};\r\n\r\nconst getters = {\r\n  closeOnContentClick:state => state.closeOnContentClick,\r\n  getField, \r\n  alltranslations:state => state.translations,\r\n  loggedIn(state) { return state.token !== null },\r\n  search: (state) => {  return state.search},\r\n  search_dialog: (state) => {  return state.search_dialog},\r\n  conType: (state) => { return state.conType},\r\n  comboData: (state) => {  return state.comboData},\r\n  getuserRoles: (state) => {  return state.userRoles},\r\n  loginuser: (state) => {  return state.loginuser},\r\n  allnewagreement: state => state.newagreement, \r\n  formData: state => state.oneCont,\r\n  historyContract:state => state.historyCont,\r\n  allformContract:state => state.formContract,\r\n  filteredagreements: function(state, getters){ \r\n   \r\n    return getters.allnewagreement.filter((contract)=>{\r\n      if(contract.createdByPersonnelName && contract.createdByPersonnelPatronymic&&contract.createdByPersonnelSurname &&contract.sellerPersonnelName &&contract.sellerPersonnelPatronymic &&contract.sellerPersonnelSurname && contract.contractNumber&&contract.contractDate&&contract.contractTypeDescription){\r\n       return contract.createdByPersonnelName.toLowerCase().match(getters.search.toLowerCase())||\r\n       contract.createdByPersonnelPatronymic.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.createdByPersonnelSurname.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelName.toString().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelPatronymic.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelSurname.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractNumber.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractDate.toString().toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractTypeDescription.toLowerCase().match(getters.search.toLowerCase())\r\n      }\r\n     })\r\n   \r\n  },\r\n \r\n  //workers\r\n  filteredworkers: function(state, getters){ \r\n    return state.workers.filter((worker)=>{ \r\n       return worker.name.toLowerCase().match(getters.search.toLowerCase()) || \r\n       worker.surname.toLowerCase().match(getters.search.toLowerCase()) ||  \r\n       worker.birthDate.toString().match(getters.search.toLowerCase())|| \r\n       worker.entranceDate.toString().match(getters.search.toLowerCase())  \r\n     })\r\n  },\r\n  allworkers: state => state.workers, \r\n \r\n  //users\r\n  filteredusers: function(state, getters){  \r\n    return state.usersdata.filter((userdata)=>{\r\n       return userdata.loginId.toLowerCase().match(getters.search.toLowerCase()) ||\r\n        userdata.personnelSurname.toLowerCase().match(getters.search.toLowerCase()) ||\r\n        userdata.personnelName.toLowerCase().match(getters.search.toLowerCase())  ||\r\n        userdata.personnelPatronymic.toLowerCase().match(getters.search.toLowerCase())   \r\n     })\r\n  },\r\n   //users\r\n   filteredViewOperations: function(state, getters){  \r\n    return state.ViewOperations.filter((item)=>{\r\n          if(item.breadcrumbLabel.charCodeAt(0)==304 && getters.search_dialog.charCodeAt(0)==105){\r\n          return item.breadcrumbLabel.match(getters.search_dialog.substring(1).toLowerCase())  \r\n        }\r\n        else {\r\n       return item.breadcrumbLabel.toLowerCase().match(getters.search_dialog.toLowerCase())  \r\n      }\r\n     })\r\n  },\r\n  allusers: state => state.usersdata,\r\n  allrecivers:state => state.recivers,\r\n  secretuserlg: state => state.secretUserlg, \r\n  secretuser: state => state.secretUserpass, \r\n  //filters\r\n  allPosition: state => state.position,\r\n  allRoles: state => state.roles,\r\n  allOrgs: state => state.orgs,\r\n\r\n  //organizations\r\n   allmainOrgs: state => state.mainOrgs,\r\n   //dictionary\r\n   alldictionary: state => state.dictionary,\r\n   \r\n   alldicbycode: state => state.dicByCode,\r\n   allcontracttype: state => state.contractType,\r\n   allcontractliability: state => state.contractLiability,\r\n   alltown: state => state.town,\r\n   allcountry: state => state.country,\r\n   allregion: state => state.region,\r\n   alltasktype: state => state.tasktype,\r\n   //sellers\r\n   allsellers: state => state.sellers,\r\n    //feeTarifs\r\n    allfeeTarifs: state => state.feeTarifs,\r\n   //payment\r\n   allpayments:state => state.payments,\r\n   allpayplan:state => state.payplan,\r\n   allViewOperations:state => state.ViewOperations,\r\n   //files\r\n   allDocuments:state => state.files,\r\n   alluser_tasks: (state)  => state.user_tasks,\r\n   alltasksCount: (state) => state.tasksCount,\r\n   allorgUnitType: (state) => state.orgUnitType,\r\n   allsuborgs:(state) => state.suborgs,\r\n   allview_components:(state) => state.view_components,\r\n   allcontractProcessState:(state) => state.contractProcessState,\r\n   allsearchedContract:(state) => state.searchedContract,\r\n};\r\n\r\nconst mutations = \r\n{ \r\n  translations:(state, translations) =>(state.translations= translations),\r\n  setuser_tasks: (state, user_tasks) => (state.user_tasks = user_tasks),\r\n  settasksCount: (state,  tasksCount) => (state.tasksCount = tasksCount),\r\n  updateField,\r\n  //formsContract\r\n  formContract: (state, formContract) => (state.formContract = formContract),\r\n  ViewOperations: (state, ViewOperations) => (state.ViewOperations = ViewOperations),\r\n  viewComponents: (state, view_components) => (state.view_components = view_components),\r\n\r\n   //login \r\n  retrieveToken(state, token) {state.token = token}, \r\n  retrieveUserinfo(state, i) {state.loginuser = JSON.parse(i)}, \r\n  destroyToken(state) {  state.token = null },\r\n  destroyUserinfo(state) {  state.loginuser =  null },\r\n    //main\r\n  setNewagreement: (state, newagreement) => (state.newagreement = newagreement),\r\n  setContracts: (state, searchedContract) => (state.searchedContract = searchedContract),\r\n  oneContract: (state, oneCont) => (state.oneCont = oneCont),\r\n  contractHistory: (state, historyCont) => (state.historyCont = historyCont),\r\n \r\n  newContractdata: (state, contract) => state.newagreement.push(contract),\r\n  updateCont(state, contract) {\r\n    const index = state.newagreement.findIndex(item => item.id == contract.id)\r\n    state.newagreement.splice(index, 1, contract)\r\n  },\r\n  \r\n  updateSearch (state, search) { state.search = search },\r\n  updateSearchDialog (state, search_dialog) { state.search_dialog = search_dialog },\r\n  updateCombo (state, comboData) { state.comboData = comboData },\r\n  updateType (state, conType) { state.conType = conType },\r\n  removeContract: (state, id) => (state.newagreement = state.newagreement.filter(agr => agr.id !== id)),\r\n   //workers\r\n  setWorkers: (state, workers) => (state.workers = workers),\r\n  newWorkerdata: (state, worker) => state.workers.push(worker),\r\n  updateWorkerdata(state, worker) {\r\n    const index = state.workers.findIndex(item => item.id == worker.id)\r\n    state.workers.splice(index, 1, worker)\r\n  },\r\n   //users\r\n  setUsers: (state, usersdata) => (state.usersdata = usersdata),\r\n  conRecivers:(state, recivers) => (state.recivers = recivers),\r\n  newUserdata: (state, user) => state.usersdata.push(user), \r\n  removeUser: (state, id) => (state.userdata = state.userdata.filter(user => user.id !== id)),\r\n  addRole: (state, role) => state.roles.push(role),\r\n  updRole(state, role) {\r\n    const index = state.roles.findIndex(item => item.id == role.id)\r\n    state.roles.splice(index, 1, role)\r\n  },\r\n   //filters\r\n  setPosition:(state, position) =>(state.position= position),\r\n  addPosition: (state, pos) => state.position.push(pos), \r\n  setRoles:(state, roles) =>(state.roles= roles),\r\n  setOrgs:(state, orgs) =>(state.orgs= orgs),\r\n  setSubOrgs:(state, suborgs) =>(state.suborgs= suborgs),\r\n   //organizations\r\n  setmainOrgs:(state, mainOrgs) =>(state.mainOrgs= mainOrgs),\r\n  //dictionary\r\n  setDictionary: (state, dictionary) => (state.dictionary = dictionary),\r\n  setContractType: (state, contractType) => (state.contractType = contractType),\r\n  setContractProcessState: (state, contractProcessState) => (state.contractProcessState = contractProcessState),\r\n  setContractLiability: (state, contractLiability) => (state.contractLiability = contractLiability),\r\n  setCityTown: (state, town) => (state.town = town),\r\n  setCountry: (state, country) => (state.country = country),\r\n  setRegion: (state, region) => (state.region = region), \r\n  setOrganizationUnitType: (state, orgUnitType) => (state.orgUnitType = orgUnitType), \r\n  setTaskType: (state, tasktype) => (state.tasktype = tasktype),  \r\n  setDictionaryByCode: (state, dicByCode) => (state.dicByCode = dicByCode),\r\n  newDicItem: (state, newitem) => state.dicByCode.push(newitem),\r\n  removeDicItem: (state, id) => (state.dicByCode = state.dicByCode.filter(item => item.id !== id)),\r\n  //sellers\r\n  setSellers: (state, sellers) => (state.sellers = sellers),\r\n  newSellerdata: (state, seller) => state.sellers.push(seller), \r\n  removeSeller: (state, id) => (state.sellers = state.sellers.filter(seller => seller.id !== id)),\r\n   //FeeTariffs\r\n   setFeeTariffs: (state, feeTarifs) => (state.feeTarifs = feeTarifs),\r\n   newFeeTariffdata: (state, fee) => state.feeTarifs.push(fee), \r\n   removeFeeTariff: (state, id) => (state.feeTarifs = state.feeTarifs.filter(fee => fee.id !== id)),\r\n   //userRoles\r\n   setUserRoles: (state, userRoles) => (state.userRoles = userRoles),\r\n   addUserRole: (state, role) => state.userRoles.push(role), \r\n   removeUserRole: (state, id) => (state.userRoles = state.userRoles.filter(userRole => userRole.id !== id)),\r\n  //paymant\r\n  getPayment:(state, payments) => (state.payments = payments),\r\n  crtPayment:(state, payment) => state.payments.push(payment), \r\n  updPayment(state, payment) {\r\n    const index = state.payments.findIndex(item => item.id == payment.id)\r\n    state.payments.splice(index, 1, payment)\r\n  },\r\n //paymant_plan\r\n getPaymentPlan:(state, payplan) => (state.payplan = payplan),\r\n crtPaymentPlan:(state, payment) => state.payplan.push(payment), \r\n updPaymentPlan(state, payment) {\r\n   const index = state.payplan.findIndex(item => item.id == payment.id)\r\n   state.payplan.splice(index, 1, payment)\r\n },\r\n removePayPlan: (state, id) => (state.payplan = state.payplan.filter(plan => plan.id !== id)),\r\n   //files\r\n   setDocuments: (state, files) => (state.files = files),\r\n    addDocument:(state, file) => state.files.push(file),\r\n     removeDocument: (state, id) => (state.files = state.files.filter(file => file.id !== id)),\r\n};\r\n\r\nconst actions = { \r\n\r\n       //view operations\r\n       async userTasks(context, userId) {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n        const response = await axios.get(`/Users/${userId}/UnCompletedTasks`);\r\n        context.commit('setuser_tasks', response.data); \r\n      \r\n        return response;\r\n      }, \r\n \r\n       async unViewedTasksCount(context, userId) {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n        const response = await axios.get(`/Users/${userId}/UnViewedTaskCount`); \r\n        context.commit('settasksCount', response.data); \r\n     \r\n        return response;\r\n      }, \r\n\r\n      async unComTasksView( context, obj)\r\n      {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n      let response = await axios.post(`/Users/${obj.userId}/UnCompletedTasks/Views`, obj); \r\n      \r\n       return response;\r\n     },\r\n\r\n     //view operations\r\n  async getViewOperations(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/App/ViewOperations'); \r\n    context.commit('ViewOperations', response.data); \r\n    \r\n    return response;\r\n  },\r\n\r\n  //form privilages\r\n  async getForms(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/App/Forms'); \r\n    context.commit('formContract', response.data); \r\n    \r\n    return response;\r\n  }, \r\n\r\n  async getViewComponents(context,viewComponentId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/App/ViewComponents/${viewComponentId}`); \r\n    context.commit('viewComponents', response.data.commandList); \r\n     \r\n    return response;\r\n  }, \r\n\r\n\r\n\r\n//language\r\nasync getDefaultLanguage(context) {\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get('/I18n/Languages'); \r\n  \r\n  return response;\r\n},\r\n\r\nasync getTranslationsById(context, languageId) {\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get(`/I18n/Languages/${languageId}/Resources`); \r\n   \r\n  return response;\r\n},\r\n\r\n  async getTranslationsByResourceType(context, obj) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/I18n/Languages/${obj.languageId}/Resources/${obj.resourceType}`); \r\n    context.commit('translations', response.data);\r\n    \r\n    return response;\r\n  },\r\n\r\n  async changePassword(context, formData) { \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    \r\n    const response = await axios.put('/Auth/PermanentPasswords', formData ); \r\n    return response;\r\n  },\r\n\r\n  async resetPassword(context, formData) { \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token \r\n    const response = await axios.post('/Auth/PasswordResets', formData ); \r\n    return response;\r\n  },\r\n\r\n  //login\r\n  destroyToken(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    if (context.getters.loggedIn) {\r\n      return new Promise((resolve, reject) => {\r\n        axios.post('/Auth/WebLogouts')\r\n          .then(response => {\r\n            localStorage.removeItem('accessToken'); \r\n             localStorage.removeItem('userinfo');\r\n          \r\n            context.commit('destroyToken');\r\n            context.commit('destroyUserinfo');\r\n            resolve(response); \r\n          })\r\n          .catch(error => { \r\n            reject(error);\r\n          })\r\n      })\r\n    }\r\n  },\r\n\r\n  retrieveToken(context, credentials) {\r\n    return new Promise((resolve, reject) => {\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n      axios.defaults.headers.common['Accept-Language'] = i18n.locale;\r\n      axios.post('/Auth/WebLogins', credentials )\r\n          .then(response => { \r\n          const token = response.data.accessToken; \r\n          \r\n          localStorage.setItem('accessToken', token);\r\n          localStorage.setItem('userinfo', JSON.stringify(response.data));\r\n          context.commit('retrieveToken', token); \r\n           context.commit('retrieveUserinfo', JSON.stringify(response.data)); \r\n           resolve(response); \r\n        })\r\n        .catch(error => { \r\n          reject(error)\r\n         })\r\n      })    \r\n  },\r\n\r\n  permananentPass(context, credentials) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token; \r\n      axios.post('/Auth/PermanentPasswords', credentials)\r\n          .then(response => {   \r\n            const token = response.data.accessToken;\r\n            localStorage.setItem('accessToken', token);\r\n            localStorage.setItem('userinfo', JSON.stringify(response.data));\r\n            context.commit('retrieveToken', token); \r\n             context.commit('retrieveUserinfo', JSON.stringify(response.data));\r\n           resolve(response);\r\n        })\r\n        .catch(error => { \r\n          reject(error)\r\n         })\r\n      })    \r\n  },\r\n\r\n  async checkSession( context)\r\n  {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  let response = await axios.post('/Auth/Web/AccessTokens/Checks');\r\n    return response;\r\n   \r\n },\r\n\r\n //search menu\r\n \r\n     async getSearchData(context, paramsData) \r\n    {\r\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n      var qs = require('qs');\r\n      const response = await axios.get('/Contracts/Search', {\r\n      params: { \r\n        registrationNumberSearchText: paramsData.registrationNumberSearchText,\r\n        contractDateBegin: paramsData.contractDateBegin,\r\n        contractDateEnd: paramsData.contractDateEnd,\r\n        soldAssetAddressAddressSearchText : paramsData.soldAssetAddressAddressSearchText,\r\n        contractNumberSearchText: paramsData.contractNumberSearchText,\r\n        filterDebtorsOnly: paramsData.filterDebtorsOnly,\r\n        soldAssetNameSearchText: paramsData.soldAssetNameSearchText,\r\n \r\n\r\n        buyerNameSearchText: paramsData.buyerNameSearchText,\r\n        buyerSurnameSearchText: paramsData.buyerSurnameSearchText,\r\n        buyerPatronymicSearchText: paramsData.buyerPatronymicSearchText,\r\n        processStatus : paramsData.processStatus, \r\n        contractTypeIdSearch : paramsData.contractTypeIdSearch\r\n      },\r\n      paramsSerializer: params => { return qs.stringify(params, {arrayFormat: 'repeat'})}\r\n    });  \r\n     context.commit('setContracts', response.data); \r\n    \r\n    return response;\r\n   } ,\r\n\r\n  //contract\r\n\r\n   fetchContracts(context, actionQueryString) \r\n   {\r\n     axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token; \r\n    axios.get(`/Contracts?${actionQueryString}`)\r\n    .then((response)=>{context.commit('setNewagreement', response.data) })\r\n    \r\n  } ,\r\n\r\n   async addNewagreement( context, obj  )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post('/Contracts', obj);\r\n   context.commit('newContractdata', response.data); \r\n    return response;\r\n  },\r\n  async getContract(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}`);\r\n    context.commit('oneContract', response.data); \r\n    return response;\r\n  },\r\n\r\n  async setContractViewedByUser(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/Contracts/${contractId}/Views`);  \r\n    return response;\r\n  },\r\n\r\n  async getContractReceivers(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}/Receivers`);\r\n      context.commit('conRecivers', response.data); \r\n    return response;\r\n  },\r\n\r\n  async updateContract(context, formData) {\r\n    \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/Contracts/${formData.id}`, formData );\r\n    context.commit('updateCont', response.data);\r\n    return response;\r\n  },\r\n   \r\n  async getContractHistory(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}/ActivityHistories`);\r\n    context.commit('contractHistory', response.data);\r\n   \r\n    return response;\r\n  },\r\n\r\n  async deleteContract(context, obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n   const response = await axios.delete(`/Contracts/${obj.contractId}` , {params: { switchOnlyStatus : obj.switchOnlyStatus }} );\r\n    context.commit('removeContract', obj.contractId);\r\n    return response;\r\n  },\r\n\r\n  //files\r\n\r\n  async fetchContractDocuments(context, contractId) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   const response = await axios.get(`/Contracts/${contractId}/Documents`); \r\n   context.commit('setDocuments', response.data);  \r\n   return response;\r\n  },\r\n  \r\n  async addContractDocuments(context, obj) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    axios.defaults.headers.common['Content-Type'] =  'multipart/form-data'\r\n    const response = await  axios.post(`/Contracts/${obj.contractId}/Documents`, obj);\r\n    context.commit('addDocument', response.data); \r\n    return response;\r\n  },\r\n\r\n   async deleteDocument(context ,obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Contracts/${obj.contractId}/Documents/${obj.documentId}`);\r\n    context.commit('removeDocument', obj.documentId);\r\n    \r\n  },\r\n\r\n   async downloadContractDocument(context, obj) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   const response = await axios.get(`/Contracts/${obj.contractId}/Documents/${obj.documentId}/File`); \r\n//   context.commit('setDocuments', response.data);  \r\n \r\n   return response;\r\n  },\r\n\r\n   // dictionary\r\n   async fetchDictionary(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries'); \r\n    context.commit('setDictionary', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async fetchDictionaryByCode(context, dictionaryCode ){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Dictionaries/${dictionaryCode}`);\r\n    context.commit('setDictionaryByCode', response.data.itemList);  \r\n    return response;\r\n   },\r\n\r\n   async addNewDicCodeItem( context  , formData )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post(`/Dictionaries/${formData.dictionaryCode}/Items`, formData);\r\n    context.commit('newDicItem', response.data); \r\n    return response;\r\n  },\r\n\r\n  async deleteDictionaryItem(context ,obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Dictionaries/${obj.dictionaryCode}/Items/${obj.dictionaryItemId}`);\r\n    context.commit('removeDicItem', obj.dictionaryItemId);\r\n    \r\n  },\r\n\r\n   async fetchContType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractType');\r\n    context.commit('setContractType',  response.data.itemList);  \r\n    return response;\r\n   },\r\n\r\n   async fetchContractProcessState(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractProcessState');\r\n    context.commit('setContractProcessState',  response.data.itemList);  \r\n    return response;\r\n   },\r\n   \r\n   async fetchContractLiability(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractLiability');\r\n    context.commit('setContractLiability',  response.data.itemList);  \r\n    return response;\r\n   },\r\n   async fetchCity(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/CityTown');\r\n    context.commit('setCityTown', response.data.itemList);\r\n    return response;\r\n   },\r\n   async fetchCountry(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/Country');\r\n    context.commit('setCountry', response.data.itemList);\r\n    return response;\r\n   },\r\n   async fetchRegion(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/Region');\r\n    context.commit('setRegion', response.data.itemList);\r\n    return response;\r\n   }, \r\n\r\n   async fetchOrganizationUnitType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/OrganizationUnitType');\r\n    context.commit('setOrganizationUnitType', response.data.itemList);\r\n    return response;\r\n   }, \r\n\r\n   async addOrganizationUnit(context,organizationUnitCreateRequest){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post('/OrganizationUnits', organizationUnitCreateRequest);\r\n    // context.commit('addOrgUnit', response.data);\r\n    return response;\r\n   }, \r\n\r\n    \r\n   async fetchContractTaskType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractTaskType');\r\n    context.commit('setTaskType', response.data.itemList);\r\n    return response;\r\n   },\r\n   //seller\r\n   async fetchSellers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Sellers'); \r\n    context.commit('setSellers', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async addSeller( context, obj )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post('/Sellers', obj );\r\n   context.commit('newSellerdata', response.data); \r\n    return response;\r\n  },\r\n\r\n  async deleteSeller(context,sellerId ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Sellers/${sellerId}`);\r\n    context.commit('removeSeller', sellerId);\r\n  },\r\n //feeTarifs\r\n async fetchFeeTariffs(context) \r\n { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get('/FeeTariffs'); \r\n  context.commit('setFeeTariffs', response.data);  \r\n \r\n  return response;\r\n },\r\n\r\n async addFeeTariffs( context, obj )\r\n {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n let response = await axios.post('/FeeTariffs', obj );\r\n context.commit('newFeeTariffdata', response.data); \r\n  return response;\r\n},\r\n\r\nasync deleteFeeTariffs(context,feeTariffId ) \r\n{ axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n  await axios.delete(`/FeeTariffs/${feeTariffId}`);\r\n  context.commit('removeFeeTariff', feeTariffId);\r\n},\r\n\r\n   //archive\r\n   async cancelContract(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Cancels`, formData);\r\n     return response;\r\n   },\r\n\r\n   async completeContract(context , completeRequest ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${completeRequest.contractId}/Completeds`, completeRequest ); \r\n     return response;\r\n   },\r\n\r\n   async recoverContract(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Recoveries`, formData); \r\n     return response;\r\n   },\r\n\r\n   async sendContract(context , contractSendRequest ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${contractSendRequest.contractId}/Sends`, contractSendRequest); \r\n     return response;\r\n   },\r\n   //payment\r\n   async fetchPayment(context,contractId ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.get(`/Contracts/${contractId}/Payments`);\r\n     context.commit('getPayment', response.data); \r\n      return response;\r\n   },\r\n\r\n   async createPayment(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Payments`, formData);\r\n     context.commit('crtPayment', response.data);\r\n     return response;\r\n   },\r\n\r\n   async updatePayment(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Contracts/${formData.contractId}/Payments/${formData.paymentId}` , formData );\r\n     context.commit('updPayment', response.data);\r\n     return response;\r\n   },\r\n\r\n   //payment_plan\r\n   async fetchPaymentPlan(context,contractId ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.get(`/Contracts/${contractId}/PaymentPlans`);\r\n     context.commit('getPaymentPlan', response.data); \r\n    \r\n     return response\r\n   },\r\n\r\n   async createPaymentPlan(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/PaymentPlans`, formData);\r\n     context.commit('crtPaymentPlan', response.data);\r\n     return response;\r\n   },\r\n\r\n   async updatePaymentPlan(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Contracts/${formData.contractId}/PaymentPlans/${formData.paymentPlanId}` , formData );\r\n     context.commit('updPaymentPlan', response.data);\r\n     return response;\r\n   },\r\n\r\n   async deletePayPlan(context ,obj ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     await axios.delete(`/Contracts/${obj.contractId}/PaymentPlans/${obj.paymentPlanId}`);\r\n     context.commit('removePayPlan', obj.paymentPlanId);\r\n     \r\n   },\r\n\r\n   //workers\r\n   async fetchWorkers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Hr/Personnels'); \r\n    context.commit('setWorkers', response.data); \r\n   },\r\n \r\n   \r\n   async addWorker( context, obj )\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.post('/Hr/Personnels', obj );\r\n    context.commit('newWorkerdata', response.data); \r\n     return response;\r\n   },\r\n\r\n   async updateWorker( context, formData )\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.put(`/Hr/Personnels/${formData.personnelId}`, formData );\r\n    context.commit('updateWorkerdata', response.data); \r\n     return response;\r\n   },\r\n\r\n   async leaveWorker( context, formData)\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.post(`/Hr/Personnels/${formData.personnelId}/Leave`, formData ); \r\n     return response;\r\n      },\r\n\r\n    async fetchPosition(context) \r\n    { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     const response = await axios.get('/Hr/PersonnelPositions'); \r\n     context.commit('setPosition', response.data); \r\n     \r\n    },\r\n\r\n    async fetchPositionCombo(context) \r\n    { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     const response = await axios.get('/Hr/PersonnelPositions/canceled'); \r\n      return response;\r\n    },\r\n\r\n    async cancelPersonnelPos( context, formData)\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     let response = await axios.post(`/Hr/PersonnelPositions/${formData.personnelPositionId}/Cancel`, formData ); \r\n     return response;  \r\n      },\r\n\r\n    async addPosition( context, formData)\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     let response = await axios.post('/Hr/PersonnelPositions', formData);\r\n     context.commit('addPosition', response.data);\r\n       },\r\n\r\n   //users\r\n   async fetchUsers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Users'); \r\n    context.commit('setUsers', response.data);  \r\n    \r\n   },\r\n\r\n   async addUser( context, { \"personnelId\":personnelId,\"roleId\":roleId})\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n       const response = await axios.post('/Users', { personnelId, roleId} );\r\n       context.commit('newUserdata', response.data);   \r\n       return response; \r\n   },\r\n\r\n   async fetchUserRoles(context, userId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Users/${userId}/Roles/`); \r\n    context.commit('setUserRoles', response.data);  \r\n   \r\n   },\r\n\r\n   async addUserRoles(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/Users/${formData.userId}/Roles/`, formData);\r\n    context.commit('addUserRole', response.data);    \r\n    return response;\r\n   },\r\n\r\n   async deleteUserRoles(context, ids) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     await axios.delete(`/Users/${ids.userId}/Roles/${ids.roleIds}`);\r\n     context.commit('removeUserRole', ids.roleIds);  \r\n   }, \r\n\r\n   async addRole( context, formData)\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n       const response = await axios.post('/Roles', formData );\r\n       context.commit('addRole', response.data);   \r\n       return response; \r\n   },\r\n   async updateRole(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Roles/${formData.roleId}` , formData );\r\n     context.commit('updRole', response.data);\r\n     return response;\r\n   },\r\n\r\n   \r\n   async updateGrantRole(context, obj ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.post(`/Roles/${obj.roleId}/ViewOperations` , obj ); \r\n     return response;\r\n   },\r\n   //filters\r\n  \r\n\r\n   async fetchRoles(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Roles'); \r\n    context.commit('setRoles', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async fetchRoleById(context, roleId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Roles/${roleId}`);  \r\n     return response;\r\n\r\n   },\r\n\r\n   //organizations\r\n\r\n \r\n\r\n   \r\n   async fetchMainOrgs(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Organizations'); \r\n    context.commit('setmainOrgs', response.data); \r\n   },\r\n\r\n   async fetchUnitOrgs(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Organizations/1/OrganizationUnits'); \r\n    context.commit('setOrgs', response.data); \r\n     \r\n   },\r\n\r\n   async fetchSubOrgs(context, organizationId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Organizations/${organizationId}/SubOrganizations`); \r\n    context.commit('setSubOrgs', response.data); \r\n   return response;\r\n   },\r\n\r\n   async updateOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/Organizations/1`,formData);  \r\n   return response;\r\n   },\r\n\r\n   async updateUnitOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/OrganizationUnits/${formData.organizationUnitId}`,formData);  \r\n   return response;\r\n   }, \r\n\r\n   async cancelUnitOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/OrganizationUnits/${formData.organizationUnitId}/Cancel`,formData);  \r\n   return response;\r\n   }, \r\n};\r\n\r\n\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}