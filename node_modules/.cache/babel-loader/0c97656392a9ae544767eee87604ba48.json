{"remainingRequest":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\q.samaya\\Desktop\\vuetifytest\\src\\store\\modules\\newagreement.js","dependencies":[{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\src\\store\\modules\\newagreement.js","mtime":1591078745895},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/q.samaya/Desktop/vuetifytest/src/store/modules/newagreement.js"],"names":["i18n","axios","getField","updateField","state","translations","formContract","ViewOperations","token","localStorage","getItem","loginuser","JSON","parse","position","roles","userRoles","orgs","newagreement","historyCont","oneCont","search","workers","usersdata","recivers","newuser","roleid","secretUserlg","secretUserpass","user_tasks","mainOrgs","dictionary","contractType","contractLiability","town","country","region","tasktype","dicByCode","sellers","feeTarifs","payments","payplan","files","tasksCount","closeOnContentClick","orgUnitType","suborgs","view_components","contractProcessState","searchedContract","getters","alltranslations","loggedIn","getuserRoles","allnewagreement","formData","historyContract","allformContract","filteredagreements","filter","contract","createdByPersonnelName","toLowerCase","match","createdByPersonnelPatronymic","createdByPersonnelSurname","sellerPersonnelName","toString","sellerPersonnelPatronymic","sellerPersonnelSurname","contractNumber","contractDate","contractTypeDescription","filteredworkers","worker","name","surname","birthDate","entranceDate","allworkers","filteredusers","userdata","loginId","personnelSurname","personnelName","personnelPatronymic","filteredViewOperations","item","breadcrumbLabel","allusers","allrecivers","secretuserlg","secretuser","allPosition","allRoles","allOrgs","allmainOrgs","alldictionary","alldicbycode","allcontracttype","allcontractliability","alltown","allcountry","allregion","alltasktype","allsellers","allfeeTarifs","allpayments","allpayplan","allViewOperations","allDocuments","alluser_tasks","alltasksCount","allorgUnitType","allsuborgs","allview_components","allcontractProcessState","allsearchedContract","mutations","setuser_tasks","settasksCount","viewComponents","retrieveToken","retrieveUserinfo","i","destroyToken","destroyUserinfo","setNewagreement","setContracts","oneContract","contractHistory","newContractdata","push","updateCont","index","findIndex","id","splice","updateSearch","removeContract","agr","setWorkers","newWorkerdata","setUsers","conRecivers","newUserdata","user","removeUser","addRole","role","updRole","setPosition","addPosition","pos","setRoles","setOrgs","setSubOrgs","setmainOrgs","setDictionary","setContractType","setContractProcessState","setContractLiability","setCityTown","setCountry","setRegion","setOrganizationUnitType","setTaskType","setDictionaryByCode","newDicItem","newitem","removeDicItem","setSellers","newSellerdata","seller","removeSeller","setFeeTariffs","newFeeTariffdata","fee","removeFeeTariff","setUserRoles","addUserRole","removeUserRole","userRole","getPayment","crtPayment","payment","updPayment","getPaymentPlan","crtPaymentPlan","updPaymentPlan","setDocuments","addDocument","file","removeDocument","actions","userTasks","context","userId","defaults","headers","common","get","response","commit","data","console","log","unViewedTasksCount","unComTasksView","obj","post","getViewOperations","getForms","getViewComponents","viewComponentId","commandList","getDefaultLanguage","getTranslationsById","languageId","getTranslationsByResourceType","resourceType","changePassword","put","resetPassword","Promise","resolve","reject","then","removeItem","accessToken","catch","error","credentials","locale","setItem","stringify","permananentPass","checkSession","getSearchData","paramsData","qs","require","params","registrationNumberSearchText","contractDateBegin","contractDateEnd","soldAssetAddressAddressSearchText","contractNumberSearchText","filterDebtorsOnly","soldAssetNameSearchText","buyerNameSearchText","buyerSurnameSearchText","buyerPatronymicSearchText","processStatus","paramsSerializer","arrayFormat","fetchContracts","actionQueryString","addNewagreement","getContract","contractId","setContractViewedByUser","getContractReceivers","updateContract","getContractHistory","deleteContract","delete","switchOnlyStatus","fetchContractDocuments","addContractDocuments","deleteDocument","documentId","downloadContractDocument","fetchDictionary","fetchDictionaryByCode","dictionaryCode","itemList","addNewDicCodeItem","deleteDictionaryItem","dictionaryItemId","fetchContType","fetchContractProcessState","fetchContractLiability","fetchCity","fetchCountry","fetchRegion","fetchOrganizationUnitType","addOrganizationUnit","organizationUnitCreateRequest","fetchContractTaskType","fetchSellers","addSeller","deleteSeller","sellerId","fetchFeeTariffs","addFeeTariffs","deleteFeeTariffs","feeTariffId","cancelContract","completeContract","completeRequest","recoverContract","sendContract","contractSendRequest","fetchPayment","createPayment","updatePayment","paymentId","fetchPaymentPlan","createPaymentPlan","updatePaymentPlan","paymentPlanId","fetchWorkers","addWorker","leaveWorker","personnelId","fetchPosition","cancelPersonnelPos","personnelPositionId","fetchUsers","addUser","roleId","fetchUserRoles","addUserRoles","deleteUserRoles","ids","roleIds","updateRole","updateGrantRole","fetchRoles","fetchRoleById","fetchMainOrgs","fetchUnitOrgs","fetchSubOrgs","organizationId","updateOrgs","updateUnitOrgs","organizationUnitId","cancelUnitOrgs"],"mappings":"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","sourcesContent":["import i18n from \"../../i18n\";\r\nimport axios from 'axios';\r\nimport { getField, updateField } from 'vuex-map-fields'; \r\nconst state = {\r\n  translations:[],\r\n  formContract:[],\r\n  ViewOperations:[],\r\n   //login\r\n  token: localStorage.getItem('accessToken') || null, \r\n  loginuser:JSON.parse(localStorage.getItem('userinfo')) || null,\r\n  //filters\r\n   position:[],\r\n   roles:[],\r\n   userRoles:[],\r\n   orgs:[],\r\n  //main\r\n  newagreement: [],\r\n  historyCont:[],\r\n  oneCont: [],\r\n  search:\"\",\r\n   \r\n   //workers   \r\n    workers:[],\r\n   \r\n    //users\r\n    usersdata:[],\r\n    recivers:[],\r\n    newuser:{\r\n      roleid:'',\r\n    }, \r\n    secretUserlg:'',\r\n    secretUserpass:'',\r\n\r\n    user_tasks:[],\r\n    //organizations\r\n    mainOrgs:[],\r\n    //dictionary\r\n    dictionary:[],\r\n    contractType:[],\r\n    contractLiability:[],\r\n    town:[],\r\n    country:[],\r\n    region:[],\r\n     tasktype:[],\r\n    dicByCode:[],\r\n    //sellers\r\n    sellers:[],\r\n    //feetarifs\r\n    feeTarifs:[],\r\n    //payment\r\n    payments:[],\r\n    payplan:[],\r\n    files:[],\r\n    tasksCount:null,\r\n    closeOnContentClick:false,\r\n    orgUnitType:[],\r\n    suborgs:[],\r\n    view_components:[],\r\n    contractProcessState:[],\r\n    searchedContract:[]\r\n};\r\n\r\nconst getters = {\r\n  closeOnContentClick:state => state.closeOnContentClick,\r\n  getField, \r\n  alltranslations:state => state.translations,\r\n  loggedIn(state) { return state.token !== null },\r\n  search: (state) => {  return state.search},\r\n  getuserRoles: (state) => {  return state.userRoles},\r\n  loginuser: (state) => {  return state.loginuser},\r\n  allnewagreement: state => state.newagreement, \r\n  formData: state => state.oneCont,\r\n  historyContract:state => state.historyCont,\r\n  allformContract:state => state.formContract,\r\n  filteredagreements: function(state, getters){ \r\n    return state.newagreement.filter((contract)=>{\r\n       return contract.createdByPersonnelName.toLowerCase().match(getters.search.toLowerCase())||\r\n       contract.createdByPersonnelPatronymic.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.createdByPersonnelSurname.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelName.toString().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelPatronymic.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelSurname.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractNumber.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractDate.toString().toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractTypeDescription.toLowerCase().match(getters.search.toLowerCase())\r\n     })\r\n  },\r\n \r\n  //workers\r\n  filteredworkers: function(state, getters){ \r\n    return state.workers.filter((worker)=>{ \r\n       return worker.name.toLowerCase().match(getters.search.toString().toLowerCase()) || \r\n       worker.surname.toLowerCase().match(getters.search.toString().toLowerCase()) ||  \r\n       worker.birthDate.toString().match(getters.search.toString().toLowerCase())|| \r\n       worker.entranceDate.toString().match(getters.search.toString().toLowerCase())  \r\n     })\r\n  },\r\n  allworkers: state => state.workers, \r\n \r\n  //users\r\n  filteredusers: function(state, getters){  \r\n    return state.usersdata.filter((userdata)=>{\r\n       return userdata.loginId.toLowerCase().match(getters.search.toLowerCase()) ||\r\n        userdata.personnelSurname.toLowerCase().match(getters.search.toLowerCase()) ||\r\n        userdata.personnelName.toLowerCase().match(getters.search.toLowerCase())  ||\r\n        userdata.personnelPatronymic.toLowerCase().match(getters.search.toLowerCase())   \r\n     })\r\n  },\r\n   //users\r\n   filteredViewOperations: function(state, getters){  \r\n    return state.ViewOperations.filter((item)=>{\r\n       return item.breadcrumbLabel.toLowerCase().match(getters.search.toLowerCase())  \r\n     })\r\n  },\r\n  allusers: state => state.usersdata,\r\n  allrecivers:state => state.recivers,\r\n  secretuserlg: state => state.secretUserlg, \r\n  secretuser: state => state.secretUserpass, \r\n  //filters\r\n  allPosition: state => state.position,\r\n  allRoles: state => state.roles,\r\n  allOrgs: state => state.orgs,\r\n\r\n  //organizations\r\n   allmainOrgs: state => state.mainOrgs,\r\n   //dictionary\r\n   alldictionary: state => state.dictionary,\r\n   \r\n   alldicbycode: state => state.dicByCode,\r\n   allcontracttype: state => state.contractType,\r\n   allcontractliability: state => state.contractLiability,\r\n   alltown: state => state.town,\r\n   allcountry: state => state.country,\r\n   allregion: state => state.region,\r\n   alltasktype: state => state.tasktype,\r\n   //sellers\r\n   allsellers: state => state.sellers,\r\n    //feeTarifs\r\n    allfeeTarifs: state => state.feeTarifs,\r\n   //payment\r\n   allpayments:state => state.payments,\r\n   allpayplan:state => state.payplan,\r\n   allViewOperations:state => state.ViewOperations,\r\n   //files\r\n   allDocuments:state => state.files,\r\n   alluser_tasks: (state)  => state.user_tasks,\r\n   alltasksCount: (state) => state.tasksCount,\r\n   allorgUnitType: (state) => state.orgUnitType,\r\n   allsuborgs:(state) => state.suborgs,\r\n   allview_components:(state) => state.view_components,\r\n   allcontractProcessState:(state) => state.contractProcessState,\r\n   allsearchedContract:(state) => state.searchedContract,\r\n};\r\n\r\nconst mutations = \r\n{ \r\n  translations:(state, translations) =>(state.translations= translations),\r\n  setuser_tasks: (state, user_tasks) => (state.user_tasks = user_tasks),\r\n  settasksCount: (state,  tasksCount) => (state.tasksCount = tasksCount),\r\n  updateField,\r\n  //formsContract\r\n  formContract: (state, formContract) => (state.formContract = formContract),\r\n  ViewOperations: (state, ViewOperations) => (state.ViewOperations = ViewOperations),\r\n  viewComponents: (state, view_components) => (state.view_components = view_components),\r\n\r\n   //login \r\n  retrieveToken(state, token) {state.token = token}, \r\n  retrieveUserinfo(state, i) {state.loginuser = JSON.parse(i)}, \r\n  destroyToken(state) {  state.token = null },\r\n  destroyUserinfo(state) {  state.loginuser =  null },\r\n    //main\r\n  setNewagreement: (state, newagreement) => (state.newagreement = newagreement),\r\n  setContracts: (state, searchedContract) => (state.searchedContract = searchedContract),\r\n  oneContract: (state, oneCont) => (state.oneCont = oneCont),\r\n  contractHistory: (state, historyCont) => (state.historyCont = historyCont),\r\n \r\n  newContractdata: (state, contract) => state.newagreement.push(contract),\r\n  updateCont(state, contract) {\r\n    const index = state.newagreement.findIndex(item => item.id == contract.id)\r\n    state.newagreement.splice(index, 1, contract)\r\n  },\r\n  \r\n  updateSearch (state, search) { state.search = search },\r\n  removeContract: (state, id) => (state.newagreement = state.newagreement.filter(agr => agr.id !== id)),\r\n   //workers\r\n  setWorkers: (state, workers) => (state.workers = workers),\r\n  newWorkerdata: (state, worker) => state.workers.push(worker),\r\n   //users\r\n  setUsers: (state, usersdata) => (state.usersdata = usersdata),\r\n  conRecivers:(state, recivers) => (state.recivers = recivers),\r\n  newUserdata: (state, user) => state.usersdata.push(user), \r\n  removeUser: (state, id) => (state.userdata = state.userdata.filter(user => user.id !== id)),\r\n  addRole: (state, role) => state.roles.push(role),\r\n  updRole(state, role) {\r\n    const index = state.roles.findIndex(item => item.id == role.id)\r\n    state.roles.splice(index, 1, role)\r\n  },\r\n   //filters\r\n  setPosition:(state, position) =>(state.position= position),\r\n  addPosition: (state, pos) => state.position.push(pos), \r\n  setRoles:(state, roles) =>(state.roles= roles),\r\n  setOrgs:(state, orgs) =>(state.orgs= orgs),\r\n  setSubOrgs:(state, suborgs) =>(state.suborgs= suborgs),\r\n   //organizations\r\n  setmainOrgs:(state, mainOrgs) =>(state.mainOrgs= mainOrgs),\r\n  //dictionary\r\n  setDictionary: (state, dictionary) => (state.dictionary = dictionary),\r\n  setContractType: (state, contractType) => (state.contractType = contractType),\r\n  setContractProcessState: (state, contractProcessState) => (state.contractProcessState = contractProcessState),\r\n  setContractLiability: (state, contractLiability) => (state.contractLiability = contractLiability),\r\n  setCityTown: (state, town) => (state.town = town),\r\n  setCountry: (state, country) => (state.country = country),\r\n  setRegion: (state, region) => (state.region = region), \r\n  setOrganizationUnitType: (state, orgUnitType) => (state.orgUnitType = orgUnitType), \r\n  setTaskType: (state, tasktype) => (state.tasktype = tasktype),  \r\n  setDictionaryByCode: (state, dicByCode) => (state.dicByCode = dicByCode),\r\n  newDicItem: (state, newitem) => state.dicByCode.push(newitem),\r\n  removeDicItem: (state, id) => (state.dicByCode = state.dicByCode.filter(item => item.id !== id)),\r\n  //sellers\r\n  setSellers: (state, sellers) => (state.sellers = sellers),\r\n  newSellerdata: (state, seller) => state.sellers.push(seller), \r\n  removeSeller: (state, id) => (state.sellers = state.sellers.filter(seller => seller.id !== id)),\r\n   //FeeTariffs\r\n   setFeeTariffs: (state, feeTarifs) => (state.feeTarifs = feeTarifs),\r\n   newFeeTariffdata: (state, fee) => state.feeTarifs.push(fee), \r\n   removeFeeTariff: (state, id) => (state.feeTarifs = state.feeTarifs.filter(fee => fee.id !== id)),\r\n   //userRoles\r\n   setUserRoles: (state, userRoles) => (state.userRoles = userRoles),\r\n   addUserRole: (state, role) => state.userRoles.push(role), \r\n   removeUserRole: (state, id) => (state.userRoles = state.userRoles.filter(userRole => userRole.id !== id)),\r\n  //paymant\r\n  getPayment:(state, payments) => (state.payments = payments),\r\n  crtPayment:(state, payment) => state.payments.push(payment), \r\n  updPayment(state, payment) {\r\n    const index = state.payments.findIndex(item => item.id == payment.id)\r\n    state.payments.splice(index, 1, payment)\r\n  },\r\n //paymant_plan\r\n getPaymentPlan:(state, payplan) => (state.payplan = payplan),\r\n crtPaymentPlan:(state, payment) => state.payplan.push(payment), \r\n updPaymentPlan(state, payment) {\r\n   const index = state.payplan.findIndex(item => item.id == payment.id)\r\n   state.payplan.splice(index, 1, payment)\r\n },\r\n   //files\r\n   setDocuments: (state, files) => (state.files = files),\r\n    addDocument:(state, file) => state.files.push(file),\r\n     removeDocument: (state, id) => (state.files = state.files.filter(file => file.id !== id)),\r\n};\r\n\r\nconst actions = { \r\n\r\n       //view operations\r\n       async userTasks(context, userId) {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n        const response = await axios.get(`/Users/${userId}/UnCompletedTasks`);\r\n        context.commit('setuser_tasks', response.data); \r\n        console.log(response.data);\r\n        return response;\r\n      }, \r\n \r\n       async unViewedTasksCount(context, userId) {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n        const response = await axios.get(`/Users/${userId}/UnViewedTaskCount`); \r\n        context.commit('settasksCount', response.data); \r\n        console.log(response.data);\r\n        return response;\r\n      }, \r\n\r\n      async unComTasksView( context, obj)\r\n      {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n      let response = await axios.post(`/Users/${obj.userId}/UnCompletedTasks/Views`, obj); \r\n   \r\n       return response;\r\n     },\r\n\r\n     //view operations\r\n  async getViewOperations(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/App/ViewOperations'); \r\n    context.commit('ViewOperations', response.data); \r\n    \r\n    return response;\r\n  },\r\n\r\n  //form privilages\r\n  async getForms(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/App/Forms'); \r\n    context.commit('formContract', response.data); \r\n    \r\n    return response;\r\n  }, \r\n\r\n  async getViewComponents(context,viewComponentId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/App/ViewComponents/${viewComponentId}`); \r\n    context.commit('viewComponents', response.data.commandList); \r\n    console.log(response.data.commandList)\r\n    return response;\r\n  }, \r\n\r\n\r\n\r\n//language\r\nasync getDefaultLanguage(context) {\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get('/I18n/Languages'); \r\n  console.log( response.data);\r\n  return response;\r\n},\r\n\r\nasync getTranslationsById(context, languageId) {\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get(`/I18n/Languages/${languageId}/Resources`); \r\n  console.log( response.data);\r\n  return response;\r\n},\r\n\r\n  async getTranslationsByResourceType(context, obj) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/I18n/Languages/${obj.languageId}/Resources/${obj.resourceType}`); \r\n    context.commit('translations', response.data);\r\n    console.log( response.data);\r\n    return response;\r\n  },\r\n\r\n  async changePassword(context, formData) { \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    \r\n    const response = await axios.put('/Auth/PermanentPasswords', formData ); \r\n    return response;\r\n  },\r\n\r\n  async resetPassword(context, formData) { \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token \r\n    const response = await axios.post('/Auth/PasswordResets', formData ); \r\n    return response;\r\n  },\r\n\r\n  //login\r\n  destroyToken(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    if (context.getters.loggedIn) {\r\n      return new Promise((resolve, reject) => {\r\n        axios.post('/Auth/WebLogouts')\r\n          .then(response => {\r\n            localStorage.removeItem('accessToken'); \r\n             localStorage.removeItem('userinfo');\r\n            console.log(response.data.accessToken)\r\n            context.commit('destroyToken');\r\n            context.commit('destroyUserinfo');\r\n            resolve(response); \r\n          })\r\n          .catch(error => { \r\n            reject(error);\r\n          })\r\n      })\r\n    }\r\n  },\r\n\r\n  retrieveToken(context, credentials) {\r\n    return new Promise((resolve, reject) => {\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n      axios.defaults.headers.common['Accept-Language'] = i18n.locale;\r\n      axios.post('/Auth/WebLogins', credentials )\r\n          .then(response => { \r\n          const token = response.data.accessToken; \r\n        \r\n          localStorage.setItem('accessToken', token);\r\n          localStorage.setItem('userinfo', JSON.stringify(response.data));\r\n          context.commit('retrieveToken', token); \r\n          context.commit('retrieveUserinfo', JSON.stringify(response.data)); \r\n           resolve(response); \r\n        })\r\n        .catch(error => { \r\n          reject(error)\r\n         })\r\n      })    \r\n  },\r\n\r\n  permananentPass(context, credentials) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token; \r\n      axios.post('/Auth/PermanentPasswords', credentials)\r\n          .then(response => {   \r\n\r\n           resolve(response);\r\n        })\r\n        .catch(error => { \r\n          reject(error)\r\n         })\r\n      })    \r\n  },\r\n\r\n  async checkSession( context)\r\n  {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  let response = await axios.post('/Auth/Web/AccessTokens/Checks');\r\n  // return response;\r\n   console.log(response.data);\r\n },\r\n\r\n //search menu\r\n \r\n     async getSearchData(context, paramsData) \r\n    {\r\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n      var qs = require('qs');\r\n      const response = await axios.get('/Contracts/Search', {\r\n      params: { \r\n        registrationNumberSearchText: paramsData.registrationNumberSearchText,\r\n        contractDateBegin: paramsData.contractDateBegin,\r\n        contractDateEnd: paramsData.contractDateEnd,\r\n        soldAssetAddressAddressSearchText : paramsData.soldAssetAddressAddressSearchText,\r\n        contractNumberSearchText: paramsData.contractNumberSearchText,\r\n        filterDebtorsOnly: paramsData.filterDebtorsOnly,\r\n        soldAssetNameSearchText: paramsData.soldAssetNameSearchText,\r\n \r\n\r\n        buyerNameSearchText: paramsData.buyerNameSearchText,\r\n        buyerSurnameSearchText: paramsData.buyerSurnameSearchText,\r\n        buyerPatronymicSearchText: paramsData.buyerPatronymicSearchText,\r\n        processStatus : paramsData.processStatus \r\n      },\r\n      paramsSerializer: params => { return qs.stringify(params, {arrayFormat: 'repeat'})}\r\n    }); \r\n     console.log(response.data);\r\n     context.commit('setContracts', response.data); \r\n    \r\n    return response;\r\n   } ,\r\n\r\n  //contract\r\n\r\n   async fetchContracts(context, actionQueryString) \r\n   {\r\n     axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token; \r\n     const response = await axios.get(`/Contracts?${actionQueryString}`);  \r\n    context.commit('setNewagreement', response.data); \r\n  } ,\r\n   async addNewagreement( context, obj  )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post('/Contracts', obj);\r\n   context.commit('newContractdata', response.data); \r\n    return response;\r\n  },\r\n  async getContract(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}`);\r\n    context.commit('oneContract', response.data); \r\n    return response;\r\n  },\r\n\r\n  async setContractViewedByUser(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/Contracts/${contractId}/Views`);  \r\n    return response;\r\n  },\r\n\r\n  async getContractReceivers(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}/Receivers`);\r\n      context.commit('conRecivers', response.data); \r\n    return response;\r\n  },\r\n\r\n  async updateContract(context, formData) {\r\n    \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/Contracts/${formData.id}`, formData );\r\n    context.commit('updateCont', response.data);\r\n    return response;\r\n  },\r\n   \r\n  async getContractHistory(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}/ActivityHistories`);\r\n    context.commit('contractHistory', response.data);\r\n    console.log( response.data);\r\n    return response;\r\n  },\r\n\r\n  async deleteContract(context, obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n   const response = await axios.delete(`/Contracts/${obj.contractId}` , {params: { switchOnlyStatus : obj.switchOnlyStatus }} );\r\n    context.commit('removeContract', obj.contractId);\r\n    return response;\r\n  },\r\n\r\n  //files\r\n\r\n  async fetchContractDocuments(context, contractId) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   const response = await axios.get(`/Contracts/${contractId}/Documents`); \r\n   context.commit('setDocuments', response.data);  \r\n   return response;\r\n  },\r\n  \r\n  async addContractDocuments(context, obj) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    axios.defaults.headers.common['Content-Type'] =  'multipart/form-data'\r\n    const response = await  axios.post(`/Contracts/${obj.contractId}/Documents`, obj);\r\n    context.commit('addDocument', response.data); \r\n    return response;\r\n  },\r\n\r\n   async deleteDocument(context ,obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Contracts/${obj.contractId}/Documents/${obj.documentId}`);\r\n    context.commit('removeDocument', obj.documentId);\r\n    \r\n  },\r\n\r\n   async downloadContractDocument(context, obj) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   const response = await axios.get(`/Contracts/${obj.contractId}/Documents/${obj.documentId}/File`); \r\n//   context.commit('setDocuments', response.data);  \r\nconsole.log(response.data);\r\n   return response;\r\n  },\r\n\r\n   // dictionary\r\n   async fetchDictionary(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries'); \r\n    context.commit('setDictionary', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async fetchDictionaryByCode(context, dictionaryCode ){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Dictionaries/${dictionaryCode}`);\r\n    context.commit('setDictionaryByCode', response.data.itemList);  \r\n    return response;\r\n   },\r\n\r\n   async addNewDicCodeItem( context  , formData )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post(`/Dictionaries/${formData.dictionaryCode}/Items`, formData);\r\n    context.commit('newDicItem', response.data); \r\n    return response;\r\n  },\r\n\r\n  async deleteDictionaryItem(context ,obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Dictionaries/${obj.dictionaryCode}/Items/${obj.dictionaryItemId}`);\r\n    context.commit('removeDicItem', obj.dictionaryItemId);\r\n    \r\n  },\r\n\r\n   async fetchContType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractType');\r\n    context.commit('setContractType',  response.data.itemList);  \r\n    return response;\r\n   },\r\n\r\n   async fetchContractProcessState(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractProcessState');\r\n    context.commit('setContractProcessState',  response.data.itemList);  \r\n    return response;\r\n   },\r\n   \r\n   async fetchContractLiability(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractLiability');\r\n    context.commit('setContractLiability',  response.data.itemList);  \r\n    return response;\r\n   },\r\n   async fetchCity(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/CityTown');\r\n    context.commit('setCityTown', response.data.itemList);\r\n    return response;\r\n   },\r\n   async fetchCountry(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/Country');\r\n    context.commit('setCountry', response.data.itemList);\r\n    return response;\r\n   },\r\n   async fetchRegion(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/Region');\r\n    context.commit('setRegion', response.data.itemList);\r\n    return response;\r\n   }, \r\n\r\n   async fetchOrganizationUnitType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/OrganizationUnitType');\r\n    context.commit('setOrganizationUnitType', response.data.itemList);\r\n    return response;\r\n   }, \r\n\r\n   async addOrganizationUnit(context,organizationUnitCreateRequest){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post('/OrganizationUnits', organizationUnitCreateRequest);\r\n    // context.commit('addOrgUnit', response.data);\r\n    return response;\r\n   }, \r\n\r\n    \r\n   async fetchContractTaskType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractTaskType');\r\n    context.commit('setTaskType', response.data.itemList);\r\n    return response;\r\n   },\r\n   //seller\r\n   async fetchSellers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Sellers'); \r\n    context.commit('setSellers', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async addSeller( context, obj )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post('/Sellers', obj );\r\n   context.commit('newSellerdata', response.data); \r\n    return response;\r\n  },\r\n\r\n  async deleteSeller(context,sellerId ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Sellers/${sellerId}`);\r\n    context.commit('removeSeller', sellerId);\r\n  },\r\n //feeTarifs\r\n async fetchFeeTariffs(context) \r\n { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get('/FeeTariffs'); \r\n  context.commit('setFeeTariffs', response.data);  \r\n  return response;\r\n },\r\n\r\n async addFeeTariffs( context, obj )\r\n {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n let response = await axios.post('/FeeTariffs', obj );\r\n context.commit('newFeeTariffdata', response.data); \r\n  return response;\r\n},\r\n\r\nasync deleteFeeTariffs(context,feeTariffId ) \r\n{ axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n  await axios.delete(`/FeeTariffs/${feeTariffId}`);\r\n  context.commit('removeFeeTariff', feeTariffId);\r\n},\r\n\r\n   //archive\r\n   async cancelContract(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Cancels`, formData);\r\n     return response;\r\n   },\r\n\r\n   async completeContract(context , completeRequest ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${completeRequest.contractId}/Completeds`, completeRequest ); \r\n     return response;\r\n   },\r\n\r\n   async recoverContract(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Recoveries`, formData); \r\n     return response;\r\n   },\r\n\r\n   async sendContract(context , contractSendRequest ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${contractSendRequest.contractId}/Sends`, contractSendRequest); \r\n     return response;\r\n   },\r\n   //payment\r\n   async fetchPayment(context,contractId ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.get(`/Contracts/${contractId}/Payments`);\r\n     context.commit('getPayment', response.data); \r\n      return response;\r\n   },\r\n\r\n   async createPayment(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Payments`, formData);\r\n     context.commit('crtPayment', response.data);\r\n     return response;\r\n   },\r\n\r\n   async updatePayment(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Contracts/${formData.contractId}/Payments/${formData.paymentId}` , formData );\r\n     context.commit('updPayment', response.data);\r\n     return response;\r\n   },\r\n\r\n   //payment_plan\r\n   async fetchPaymentPlan(context,contractId ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.get(`/Contracts/${contractId}/PaymentPlans`);\r\n     context.commit('getPaymentPlan', response.data); \r\n     return response\r\n   },\r\n\r\n   async createPaymentPlan(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/PaymentPlans`, formData);\r\n     context.commit('crtPaymentPlan', response.data);\r\n     return response;\r\n   },\r\n\r\n   async updatePaymentPlan(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Contracts/${formData.contractId}/PaymentPlans/${formData.paymentPlanId}` , formData );\r\n     context.commit('updPaymentPlan', response.data);\r\n     return response;\r\n   },\r\n   //workers\r\n   async fetchWorkers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Hr/Personnels'); \r\n    context.commit('setWorkers', response.data); \r\n   },\r\n \r\n   \r\n   async addWorker( context, obj )\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.post('/Hr/Personnels', obj );\r\n    context.commit('newWorkerdata', response.data); \r\n     return response;\r\n   },\r\n\r\n   async leaveWorker( context, formData)\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.post(`/Hr/Personnels/${formData.personnelId}/Leave`, formData ); \r\n  //  return response;\r\n    console.log(response); },\r\n\r\n    async fetchPosition(context) \r\n    { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     const response = await axios.get('/Hr/PersonnelPositions'); \r\n     context.commit('setPosition', response.data); \r\n     console.log( response.data)\r\n    },\r\n\r\n    async cancelPersonnelPos( context, formData)\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     let response = await axios.post(`/Hr/PersonnelPositions/${formData.personnelPositionId}/Cancel`, formData ); \r\n     return response;  \r\n      },\r\n\r\n    async addPosition( context, formData)\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     let response = await axios.post('/Hr/PersonnelPositions', formData);\r\n     context.commit('addPosition', response.data);\r\n     console.log(response.data); },\r\n\r\n   //users\r\n   async fetchUsers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Users'); \r\n    context.commit('setUsers', response.data);  \r\n    console.log(response.data);\r\n   },\r\n\r\n   async addUser( context, { \"personnelId\":personnelId,\"roleId\":roleId})\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n       const response = await axios.post('/Users', { personnelId, roleId} );\r\n       context.commit('newUserdata', response.data);   \r\n       return response; \r\n   },\r\n\r\n   async fetchUserRoles(context, userId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Users/${userId}/Roles/`); \r\n    context.commit('setUserRoles', response.data);  \r\n   \r\n   },\r\n\r\n   async addUserRoles(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/Users/${formData.userId}/Roles/`, formData);\r\n    context.commit('addUserRole', response.data);    \r\n    return response;\r\n   },\r\n\r\n   async deleteUserRoles(context, ids) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     await axios.delete(`/Users/${ids.userId}/Roles/${ids.roleIds}`);\r\n     context.commit('removeUserRole', ids.roleIds);  \r\n   }, \r\n\r\n   async addRole( context, formData)\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n       const response = await axios.post('/Roles', formData );\r\n       context.commit('addRole', response.data);   \r\n       return response; \r\n   },\r\n   async updateRole(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Roles/${formData.roleId}` , formData );\r\n     context.commit('updRole', response.data);\r\n     return response;\r\n   },\r\n\r\n   \r\n   async updateGrantRole(context, obj ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.post(`/Roles/${obj.roleId}/ViewOperations` , obj ); \r\n     return response;\r\n   },\r\n   //filters\r\n  \r\n\r\n   async fetchRoles(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Roles'); \r\n    context.commit('setRoles', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async fetchRoleById(context, roleId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Roles/${roleId}`);  \r\n     return response;\r\n\r\n   },\r\n\r\n   //organizations\r\n\r\n \r\n\r\n   \r\n   async fetchMainOrgs(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Organizations'); \r\n    context.commit('setmainOrgs', response.data); \r\n   },\r\n\r\n   async fetchUnitOrgs(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Organizations/1/OrganizationUnits'); \r\n    context.commit('setOrgs', response.data); \r\n   },\r\n\r\n   async fetchSubOrgs(context, organizationId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Organizations/${organizationId}/SubOrganizations`); \r\n    context.commit('setSubOrgs', response.data); \r\n   return response;\r\n   },\r\n\r\n   async updateOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/Organizations/1`,formData);  \r\n   return response;\r\n   },\r\n\r\n   async updateUnitOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/OrganizationUnits/${formData.organizationUnitId}`,formData);  \r\n   return response;\r\n   }, \r\n\r\n   async cancelUnitOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/OrganizationUnits/${formData.organizationUnitId}/Cancel`,formData);  \r\n   return response;\r\n   }, \r\n};\r\n\r\n\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}