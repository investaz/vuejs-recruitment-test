{"remainingRequest":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\q.samaya\\Desktop\\vuetifytest\\src\\views\\Search.vue?vue&type=template&id=4bd76772&","dependencies":[{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\src\\views\\Search.vue","mtime":1590136215172},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}