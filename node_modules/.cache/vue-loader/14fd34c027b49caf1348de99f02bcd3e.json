{"remainingRequest":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\q.samaya\\Desktop\\MIS\\src\\components\\UsersTable.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\src\\components\\UsersTable.vue","mtime":1592982547372},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNsb3NlZCwNCi5jbG9zZWQgfiB0ZHsNCiAgIG9wYWNpdHk6IDAuNTsgDQp9DQo="},{"version":3,"sources":["UsersTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA","file":"UsersTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div class=\"table-componenet users-table-design\">\r\n    <v-data-table \r\n      :headers=\"headers\"\r\n      :items=\"allusers\"   \r\n       item-key=\"personnelName\" \r\n         :footer-props=\"{\r\n        itemsPerPageText:'Məlumat sayı:',\r\n           itemsPerPageOptions: [10,50,100, 1000], // -> Add this example\r\n          \r\n      }\">\r\n     \r\n        <template v-slot:body=\"{ items }\">\r\n           <tbody>\r\n          <tr :class=\"key === selectedRow ? 'custom-highlight-row' : ''\" @click=\"rowSelect(key)\" v-for=\"(item, key) in items\" :key=\"item.name\">\r\n          <td :class=\"item.closed === true ? 'closed' : ''\">{{key+1}}</td>\r\n          <td>{{ item.loginId }}</td>\r\n           <td>{{item.personnelName+\" \"+item.personnelSurname + ' '+ item.personnelPatronymic}}</td>\r\n           \r\n           <td> \r\n             <v-menu offset-y :close-on-content-click='false' v-if=\"item.closed==false\">\r\n      <template v-slot:activator=\"{ on }\">\r\n       <v-btn v-on=\"on\" icon>\r\n        <v-icon>more_vert</v-icon>  \r\n      </v-btn>\r\n      </template>\r\n      \r\n      <v-list class='button_list'> \r\n         <v-list-item>\r\n          <UserRoles v-bind:userId = 'item.id'  v-bind:name_user=\"item.personnelName \" v-bind:surname=\"item.personnelSurname \" v-bind:patronymic=\" item.personnelPatronymic \"/>\r\n         </v-list-item>\r\n\r\n         <v-list-item>\r\n          <ResetPassword v-bind:userId = 'item.id'  v-bind:name_user=\"item.personnelName+' '+item.personnelSurname+' '+item.personnelPatronymic\" />\r\n         </v-list-item>\r\n      </v-list>\r\n    </v-menu></td>\r\n        </tr>\r\n         <tr v-if=\"allusers.length==0\" class=\"norecord\">\r\n          <td colspan=\"4\"><div class=\"norecord-c\">Məlumat yoxdur...</div></td>\r\n        </tr>\r\n      </tbody>\r\n    </template>\r\n  </v-data-table> \r\n    <ErrorDialog v-model=\"dialog_err\"  v-bind:errorMsg=\"errorMsg\"/>\r\n  </div>\r\n\r\n</template>\r\n \r\n<script > \r\nimport UserRoles from '../popups/UserRoles';\r\nimport ResetPassword from '../popups/ResetPassword';\r\nimport ErrorDialog from '../popups/ErrorDialog';\r\nimport { mapGetters, mapActions } from \"vuex\";  \r\n  export default {\r\n    components:{UserRoles,ResetPassword,ErrorDialog},\r\n    data () {\r\n      return {  \r\n        errorMsg:'',\r\n         dialog_err:false, \r\n          selectedRow: null, \r\n           headers:[\r\n        { text: '№',   value: 'index',sortable:false },\r\n        { text: 'İstfadəçi adı',   value: 'loginId'  },\r\n        { text: 'A.S.A', value: 'personnelName'   },  \r\n        { text: '',  value: 'more' ,sortable:false  },\r\n         \r\n      ]\r\n      }\r\n    },\r\n      methods: {\r\n    ...mapActions([\"fetchUsers\",\"deleteUser\"]),\r\n     rowSelect(idx) { this.selectedRow = idx; },\r\n        },\r\n  computed: mapGetters([\"allusers\",\"filteredusers\"]),\r\n  created() {\r\n    this.fetchUsers() \r\n     .catch(error => {  \r\n        if(error.response.data.errorCode=='Session.NotFound'|| error.response.data.errorCode=='Session.IsExpired'){ this.$router.push({ path: '/' });   }\r\n         \r\n              this.dialog_err=true;\r\n                this.errorMsg=error.response.data; \r\n        \r\n         })\r\n  }\r\n  \r\n}\r\n</script>\r\n<style  >\r\n.closed,\r\n.closed ~ td{\r\n   opacity: 0.5; \r\n}\r\n</style>"]}]}