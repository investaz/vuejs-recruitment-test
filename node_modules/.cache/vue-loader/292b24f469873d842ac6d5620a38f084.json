{"remainingRequest":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\q.samaya\\Desktop\\vuetifytest\\src\\views\\Createnewagreement.vue?vue&type=template&id=efe1b9c8&","dependencies":[{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\src\\views\\Createnewagreement.vue","mtime":1586440482268},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\vuetifytest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}