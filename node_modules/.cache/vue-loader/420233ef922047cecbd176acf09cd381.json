{"remainingRequest":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\q.samaya\\Desktop\\MIS\\src\\views\\Search.vue?vue&type=template&id=18ad63aa&","dependencies":[{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\src\\views\\Search.vue","mtime":1591273772577},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}