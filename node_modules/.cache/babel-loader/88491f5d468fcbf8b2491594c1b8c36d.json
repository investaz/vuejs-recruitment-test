{"remainingRequest":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\q.samaya\\Desktop\\MIS\\src\\store\\modules\\newagreement.js","dependencies":[{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\src\\store\\modules\\newagreement.js","mtime":1592475273398},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\q.samaya\\Desktop\\MIS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/q.samaya/Desktop/MIS/src/store/modules/newagreement.js"],"names":["i18n","axios","getField","updateField","state","translations","formContract","ViewOperations","token","localStorage","getItem","loginuser","JSON","parse","position","roles","userRoles","orgs","newagreement","historyCont","oneCont","search","workers","usersdata","recivers","newuser","roleid","secretUserlg","secretUserpass","user_tasks","mainOrgs","dictionary","contractType","contractLiability","town","country","region","tasktype","dicByCode","sellers","feeTarifs","payments","payplan","files","tasksCount","closeOnContentClick","orgUnitType","suborgs","view_components","contractProcessState","searchedContract","getters","alltranslations","loggedIn","getuserRoles","allnewagreement","formData","historyContract","allformContract","filteredagreements","filter","contract","createdByPersonnelName","createdByPersonnelPatronymic","createdByPersonnelSurname","sellerPersonnelName","sellerPersonnelPatronymic","sellerPersonnelSurname","contractNumber","contractDate","contractTypeDescription","toLowerCase","match","toString","filteredworkers","worker","name","surname","birthDate","entranceDate","allworkers","filteredusers","userdata","loginId","personnelSurname","personnelName","personnelPatronymic","filteredViewOperations","item","breadcrumbLabel","allusers","allrecivers","secretuserlg","secretuser","allPosition","allRoles","allOrgs","allmainOrgs","alldictionary","alldicbycode","allcontracttype","allcontractliability","alltown","allcountry","allregion","alltasktype","allsellers","allfeeTarifs","allpayments","allpayplan","allViewOperations","allDocuments","alluser_tasks","alltasksCount","allorgUnitType","allsuborgs","allview_components","allcontractProcessState","allsearchedContract","mutations","setuser_tasks","settasksCount","viewComponents","retrieveToken","retrieveUserinfo","i","destroyToken","destroyUserinfo","setNewagreement","setContracts","oneContract","contractHistory","newContractdata","push","updateCont","index","findIndex","id","splice","updateSearch","removeContract","agr","setWorkers","newWorkerdata","updateWorkerdata","setUsers","conRecivers","newUserdata","user","removeUser","addRole","role","updRole","setPosition","addPosition","pos","setRoles","setOrgs","setSubOrgs","setmainOrgs","setDictionary","setContractType","setContractProcessState","setContractLiability","setCityTown","setCountry","setRegion","setOrganizationUnitType","setTaskType","setDictionaryByCode","newDicItem","newitem","removeDicItem","setSellers","newSellerdata","seller","removeSeller","setFeeTariffs","newFeeTariffdata","fee","removeFeeTariff","setUserRoles","addUserRole","removeUserRole","userRole","getPayment","crtPayment","payment","updPayment","getPaymentPlan","crtPaymentPlan","updPaymentPlan","setDocuments","addDocument","file","removeDocument","actions","userTasks","context","userId","defaults","headers","common","get","response","commit","data","unViewedTasksCount","unComTasksView","obj","post","getViewOperations","getForms","getViewComponents","viewComponentId","commandList","console","log","getDefaultLanguage","getTranslationsById","languageId","getTranslationsByResourceType","resourceType","changePassword","put","resetPassword","Promise","resolve","reject","then","removeItem","accessToken","catch","error","credentials","locale","setItem","stringify","permananentPass","checkSession","getSearchData","paramsData","qs","require","params","registrationNumberSearchText","contractDateBegin","contractDateEnd","soldAssetAddressAddressSearchText","contractNumberSearchText","filterDebtorsOnly","soldAssetNameSearchText","buyerNameSearchText","buyerSurnameSearchText","buyerPatronymicSearchText","processStatus","paramsSerializer","arrayFormat","fetchContracts","actionQueryString","addNewagreement","getContract","contractId","setContractViewedByUser","getContractReceivers","updateContract","getContractHistory","deleteContract","delete","switchOnlyStatus","fetchContractDocuments","addContractDocuments","deleteDocument","documentId","downloadContractDocument","fetchDictionary","fetchDictionaryByCode","dictionaryCode","itemList","addNewDicCodeItem","deleteDictionaryItem","dictionaryItemId","fetchContType","fetchContractProcessState","fetchContractLiability","fetchCity","fetchCountry","fetchRegion","fetchOrganizationUnitType","addOrganizationUnit","organizationUnitCreateRequest","fetchContractTaskType","fetchSellers","addSeller","deleteSeller","sellerId","fetchFeeTariffs","addFeeTariffs","deleteFeeTariffs","feeTariffId","cancelContract","completeContract","completeRequest","recoverContract","sendContract","contractSendRequest","fetchPayment","createPayment","updatePayment","paymentId","fetchPaymentPlan","createPaymentPlan","updatePaymentPlan","paymentPlanId","fetchWorkers","addWorker","updateWorker","personnelId","leaveWorker","fetchPosition","fetchPositionCombo","cancelPersonnelPos","personnelPositionId","fetchUsers","addUser","roleId","fetchUserRoles","addUserRoles","deleteUserRoles","ids","roleIds","updateRole","updateGrantRole","fetchRoles","fetchRoleById","fetchMainOrgs","fetchUnitOrgs","fetchSubOrgs","organizationId","updateOrgs","updateUnitOrgs","organizationUnitId","cancelUnitOrgs"],"mappings":"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","sourcesContent":["import i18n from \"../../i18n\";\r\nimport axios from 'axios';\r\nimport { getField, updateField } from 'vuex-map-fields'; \r\nconst state = {\r\n  translations:[],\r\n  formContract:[],\r\n  ViewOperations:[],\r\n   //login\r\n  token: localStorage.getItem('accessToken') || null, \r\n  loginuser:JSON.parse(localStorage.getItem('userinfo')) || null,\r\n  //filters\r\n   position:[],\r\n   roles:[],\r\n   userRoles:[],\r\n   orgs:[],\r\n  //main\r\n  newagreement: [],\r\n  historyCont:[],\r\n  oneCont: [],\r\n  search:\"\",\r\n   \r\n   //workers   \r\n    workers:[],\r\n   \r\n    //users\r\n    usersdata:[],\r\n    recivers:[],\r\n    newuser:{\r\n      roleid:'',\r\n    }, \r\n    secretUserlg:'',\r\n    secretUserpass:'',\r\n\r\n    user_tasks:[],\r\n    //organizations\r\n    mainOrgs:[],\r\n    //dictionary\r\n    dictionary:[],\r\n    contractType:[],\r\n    contractLiability:[],\r\n    town:[],\r\n    country:[],\r\n    region:[],\r\n     tasktype:[],\r\n    dicByCode:[],\r\n    //sellers\r\n    sellers:[],\r\n    //feetarifs\r\n    feeTarifs:[],\r\n    //payment\r\n    payments:[],\r\n    payplan:[],\r\n    files:[],\r\n    tasksCount:null,\r\n    closeOnContentClick:false,\r\n    orgUnitType:[],\r\n    suborgs:[],\r\n    view_components:[],\r\n    contractProcessState:[],\r\n    searchedContract:[]\r\n};\r\n\r\nconst getters = {\r\n  closeOnContentClick:state => state.closeOnContentClick,\r\n  getField, \r\n  alltranslations:state => state.translations,\r\n  loggedIn(state) { return state.token !== null },\r\n  search: (state) => {  return state.search},\r\n  getuserRoles: (state) => {  return state.userRoles},\r\n  loginuser: (state) => {  return state.loginuser},\r\n  allnewagreement: state => state.newagreement, \r\n  formData: state => state.oneCont,\r\n  historyContract:state => state.historyCont,\r\n  allformContract:state => state.formContract,\r\n  filteredagreements: function(state, getters){ \r\n   \r\n    return getters.allnewagreement.filter((contract)=>{\r\n      if(contract.createdByPersonnelName && contract.createdByPersonnelPatronymic&&contract.createdByPersonnelSurname &&contract.sellerPersonnelName &&contract.sellerPersonnelPatronymic &&contract.sellerPersonnelSurname && contract.contractNumber&&contract.contractDate&&contract.contractTypeDescription){\r\n       return contract.createdByPersonnelName.toLowerCase().match(getters.search.toLowerCase())||\r\n       contract.createdByPersonnelPatronymic.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.createdByPersonnelSurname.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelName.toString().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelPatronymic.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.sellerPersonnelSurname.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractNumber.toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractDate.toString().toLowerCase().match(getters.search.toLowerCase())|| \r\n       contract.contractTypeDescription.toLowerCase().match(getters.search.toLowerCase())\r\n      }\r\n     })\r\n   \r\n  },\r\n \r\n  //workers\r\n  filteredworkers: function(state, getters){ \r\n    return state.workers.filter((worker)=>{ \r\n       return worker.name.toLowerCase().match(getters.search.toLowerCase()) || \r\n       worker.surname.toLowerCase().match(getters.search.toLowerCase()) ||  \r\n       worker.birthDate.toString().match(getters.search.toLowerCase())|| \r\n       worker.entranceDate.toString().match(getters.search.toLowerCase())  \r\n     })\r\n  },\r\n  allworkers: state => state.workers, \r\n \r\n  //users\r\n  filteredusers: function(state, getters){  \r\n    return state.usersdata.filter((userdata)=>{\r\n       return userdata.loginId.toLowerCase().match(getters.search.toLowerCase()) ||\r\n        userdata.personnelSurname.toLowerCase().match(getters.search.toLowerCase()) ||\r\n        userdata.personnelName.toLowerCase().match(getters.search.toLowerCase())  ||\r\n        userdata.personnelPatronymic.toLowerCase().match(getters.search.toLowerCase())   \r\n     })\r\n  },\r\n   //users\r\n   filteredViewOperations: function(state, getters){  \r\n    return state.ViewOperations.filter((item)=>{\r\n      // console.log(item.breadcrumbLabel.toLowerCase() +\" and \" +getters.search.toLowerCase() +' and '+item.breadcrumbLabel.toLowerCase().match(getters.search.toLowerCase()))\r\n       return item.breadcrumbLabel.toLowerCase().match(getters.search.toLowerCase())  \r\n     })\r\n  },\r\n  allusers: state => state.usersdata,\r\n  allrecivers:state => state.recivers,\r\n  secretuserlg: state => state.secretUserlg, \r\n  secretuser: state => state.secretUserpass, \r\n  //filters\r\n  allPosition: state => state.position,\r\n  allRoles: state => state.roles,\r\n  allOrgs: state => state.orgs,\r\n\r\n  //organizations\r\n   allmainOrgs: state => state.mainOrgs,\r\n   //dictionary\r\n   alldictionary: state => state.dictionary,\r\n   \r\n   alldicbycode: state => state.dicByCode,\r\n   allcontracttype: state => state.contractType,\r\n   allcontractliability: state => state.contractLiability,\r\n   alltown: state => state.town,\r\n   allcountry: state => state.country,\r\n   allregion: state => state.region,\r\n   alltasktype: state => state.tasktype,\r\n   //sellers\r\n   allsellers: state => state.sellers,\r\n    //feeTarifs\r\n    allfeeTarifs: state => state.feeTarifs,\r\n   //payment\r\n   allpayments:state => state.payments,\r\n   allpayplan:state => state.payplan,\r\n   allViewOperations:state => state.ViewOperations,\r\n   //files\r\n   allDocuments:state => state.files,\r\n   alluser_tasks: (state)  => state.user_tasks,\r\n   alltasksCount: (state) => state.tasksCount,\r\n   allorgUnitType: (state) => state.orgUnitType,\r\n   allsuborgs:(state) => state.suborgs,\r\n   allview_components:(state) => state.view_components,\r\n   allcontractProcessState:(state) => state.contractProcessState,\r\n   allsearchedContract:(state) => state.searchedContract,\r\n};\r\n\r\nconst mutations = \r\n{ \r\n  translations:(state, translations) =>(state.translations= translations),\r\n  setuser_tasks: (state, user_tasks) => (state.user_tasks = user_tasks),\r\n  settasksCount: (state,  tasksCount) => (state.tasksCount = tasksCount),\r\n  updateField,\r\n  //formsContract\r\n  formContract: (state, formContract) => (state.formContract = formContract),\r\n  ViewOperations: (state, ViewOperations) => (state.ViewOperations = ViewOperations),\r\n  viewComponents: (state, view_components) => (state.view_components = view_components),\r\n\r\n   //login \r\n  retrieveToken(state, token) {state.token = token}, \r\n  retrieveUserinfo(state, i) {state.loginuser = JSON.parse(i)}, \r\n  destroyToken(state) {  state.token = null },\r\n  destroyUserinfo(state) {  state.loginuser =  null },\r\n    //main\r\n  setNewagreement: (state, newagreement) => (state.newagreement = newagreement),\r\n  setContracts: (state, searchedContract) => (state.searchedContract = searchedContract),\r\n  oneContract: (state, oneCont) => (state.oneCont = oneCont),\r\n  contractHistory: (state, historyCont) => (state.historyCont = historyCont),\r\n \r\n  newContractdata: (state, contract) => state.newagreement.push(contract),\r\n  updateCont(state, contract) {\r\n    const index = state.newagreement.findIndex(item => item.id == contract.id)\r\n    state.newagreement.splice(index, 1, contract)\r\n  },\r\n  \r\n  updateSearch (state, search) { state.search = search },\r\n  removeContract: (state, id) => (state.newagreement = state.newagreement.filter(agr => agr.id !== id)),\r\n   //workers\r\n  setWorkers: (state, workers) => (state.workers = workers),\r\n  newWorkerdata: (state, worker) => state.workers.push(worker),\r\n  updateWorkerdata(state, worker) {\r\n    const index = state.workers.findIndex(item => item.id == worker.id)\r\n    state.workers.splice(index, 1, worker)\r\n  },\r\n   //users\r\n  setUsers: (state, usersdata) => (state.usersdata = usersdata),\r\n  conRecivers:(state, recivers) => (state.recivers = recivers),\r\n  newUserdata: (state, user) => state.usersdata.push(user), \r\n  removeUser: (state, id) => (state.userdata = state.userdata.filter(user => user.id !== id)),\r\n  addRole: (state, role) => state.roles.push(role),\r\n  updRole(state, role) {\r\n    const index = state.roles.findIndex(item => item.id == role.id)\r\n    state.roles.splice(index, 1, role)\r\n  },\r\n   //filters\r\n  setPosition:(state, position) =>(state.position= position),\r\n  addPosition: (state, pos) => state.position.push(pos), \r\n  setRoles:(state, roles) =>(state.roles= roles),\r\n  setOrgs:(state, orgs) =>(state.orgs= orgs),\r\n  setSubOrgs:(state, suborgs) =>(state.suborgs= suborgs),\r\n   //organizations\r\n  setmainOrgs:(state, mainOrgs) =>(state.mainOrgs= mainOrgs),\r\n  //dictionary\r\n  setDictionary: (state, dictionary) => (state.dictionary = dictionary),\r\n  setContractType: (state, contractType) => (state.contractType = contractType),\r\n  setContractProcessState: (state, contractProcessState) => (state.contractProcessState = contractProcessState),\r\n  setContractLiability: (state, contractLiability) => (state.contractLiability = contractLiability),\r\n  setCityTown: (state, town) => (state.town = town),\r\n  setCountry: (state, country) => (state.country = country),\r\n  setRegion: (state, region) => (state.region = region), \r\n  setOrganizationUnitType: (state, orgUnitType) => (state.orgUnitType = orgUnitType), \r\n  setTaskType: (state, tasktype) => (state.tasktype = tasktype),  \r\n  setDictionaryByCode: (state, dicByCode) => (state.dicByCode = dicByCode),\r\n  newDicItem: (state, newitem) => state.dicByCode.push(newitem),\r\n  removeDicItem: (state, id) => (state.dicByCode = state.dicByCode.filter(item => item.id !== id)),\r\n  //sellers\r\n  setSellers: (state, sellers) => (state.sellers = sellers),\r\n  newSellerdata: (state, seller) => state.sellers.push(seller), \r\n  removeSeller: (state, id) => (state.sellers = state.sellers.filter(seller => seller.id !== id)),\r\n   //FeeTariffs\r\n   setFeeTariffs: (state, feeTarifs) => (state.feeTarifs = feeTarifs),\r\n   newFeeTariffdata: (state, fee) => state.feeTarifs.push(fee), \r\n   removeFeeTariff: (state, id) => (state.feeTarifs = state.feeTarifs.filter(fee => fee.id !== id)),\r\n   //userRoles\r\n   setUserRoles: (state, userRoles) => (state.userRoles = userRoles),\r\n   addUserRole: (state, role) => state.userRoles.push(role), \r\n   removeUserRole: (state, id) => (state.userRoles = state.userRoles.filter(userRole => userRole.id !== id)),\r\n  //paymant\r\n  getPayment:(state, payments) => (state.payments = payments),\r\n  crtPayment:(state, payment) => state.payments.push(payment), \r\n  updPayment(state, payment) {\r\n    const index = state.payments.findIndex(item => item.id == payment.id)\r\n    state.payments.splice(index, 1, payment)\r\n  },\r\n //paymant_plan\r\n getPaymentPlan:(state, payplan) => (state.payplan = payplan),\r\n crtPaymentPlan:(state, payment) => state.payplan.push(payment), \r\n updPaymentPlan(state, payment) {\r\n   const index = state.payplan.findIndex(item => item.id == payment.id)\r\n   state.payplan.splice(index, 1, payment)\r\n },\r\n   //files\r\n   setDocuments: (state, files) => (state.files = files),\r\n    addDocument:(state, file) => state.files.push(file),\r\n     removeDocument: (state, id) => (state.files = state.files.filter(file => file.id !== id)),\r\n};\r\n\r\nconst actions = { \r\n\r\n       //view operations\r\n       async userTasks(context, userId) {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n        const response = await axios.get(`/Users/${userId}/UnCompletedTasks`);\r\n        context.commit('setuser_tasks', response.data); \r\n       \r\n        return response;\r\n      }, \r\n \r\n       async unViewedTasksCount(context, userId) {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n        const response = await axios.get(`/Users/${userId}/UnViewedTaskCount`); \r\n        context.commit('settasksCount', response.data); \r\n    \r\n        return response;\r\n      }, \r\n\r\n      async unComTasksView( context, obj)\r\n      {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n      let response = await axios.post(`/Users/${obj.userId}/UnCompletedTasks/Views`, obj); \r\n      \r\n       return response;\r\n     },\r\n\r\n     //view operations\r\n  async getViewOperations(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/App/ViewOperations'); \r\n    context.commit('ViewOperations', response.data); \r\n    \r\n    return response;\r\n  },\r\n\r\n  //form privilages\r\n  async getForms(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/App/Forms'); \r\n    context.commit('formContract', response.data); \r\n    \r\n    return response;\r\n  }, \r\n\r\n  async getViewComponents(context,viewComponentId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/App/ViewComponents/${viewComponentId}`); \r\n    context.commit('viewComponents', response.data.commandList); \r\n    console.log(response.data.commandList)\r\n    return response;\r\n  }, \r\n\r\n\r\n\r\n//language\r\nasync getDefaultLanguage(context) {\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get('/I18n/Languages'); \r\n  console.log( response.data);\r\n  return response;\r\n},\r\n\r\nasync getTranslationsById(context, languageId) {\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get(`/I18n/Languages/${languageId}/Resources`); \r\n  console.log( response.data);\r\n  return response;\r\n},\r\n\r\n  async getTranslationsByResourceType(context, obj) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/I18n/Languages/${obj.languageId}/Resources/${obj.resourceType}`); \r\n    context.commit('translations', response.data);\r\n    console.log( response.data);\r\n    return response;\r\n  },\r\n\r\n  async changePassword(context, formData) { \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    \r\n    const response = await axios.put('/Auth/PermanentPasswords', formData ); \r\n    return response;\r\n  },\r\n\r\n  async resetPassword(context, formData) { \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token \r\n    const response = await axios.post('/Auth/PasswordResets', formData ); \r\n    return response;\r\n  },\r\n\r\n  //login\r\n  destroyToken(context) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    if (context.getters.loggedIn) {\r\n      return new Promise((resolve, reject) => {\r\n        axios.post('/Auth/WebLogouts')\r\n          .then(response => {\r\n            localStorage.removeItem('accessToken'); \r\n             localStorage.removeItem('userinfo');\r\n            console.log(response.data.accessToken)\r\n            context.commit('destroyToken');\r\n            context.commit('destroyUserinfo');\r\n            resolve(response); \r\n          })\r\n          .catch(error => { \r\n            reject(error);\r\n          })\r\n      })\r\n    }\r\n  },\r\n\r\n  retrieveToken(context, credentials) {\r\n    return new Promise((resolve, reject) => {\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n      axios.defaults.headers.common['Accept-Language'] = i18n.locale;\r\n      axios.post('/Auth/WebLogins', credentials )\r\n          .then(response => { \r\n          const token = response.data.accessToken; \r\n           console.log(response.data);\r\n          localStorage.setItem('accessToken', token);\r\n          localStorage.setItem('userinfo', JSON.stringify(response.data));\r\n          context.commit('retrieveToken', token); \r\n           context.commit('retrieveUserinfo', JSON.stringify(response.data)); \r\n           resolve(response); \r\n        })\r\n        .catch(error => { \r\n          reject(error)\r\n         })\r\n      })    \r\n  },\r\n\r\n  permananentPass(context, credentials) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token; \r\n      axios.post('/Auth/PermanentPasswords', credentials)\r\n          .then(response => {   \r\n            const token = response.data.accessToken;\r\n            localStorage.setItem('accessToken', token);\r\n            localStorage.setItem('userinfo', JSON.stringify(response.data));\r\n            context.commit('retrieveToken', token); \r\n             context.commit('retrieveUserinfo', JSON.stringify(response.data));\r\n           resolve(response);\r\n        })\r\n        .catch(error => { \r\n          reject(error)\r\n         })\r\n      })    \r\n  },\r\n\r\n  async checkSession( context)\r\n  {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  let response = await axios.post('/Auth/Web/AccessTokens/Checks');\r\n  // return response;\r\n   console.log(response.data);\r\n },\r\n\r\n //search menu\r\n \r\n     async getSearchData(context, paramsData) \r\n    {\r\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n      var qs = require('qs');\r\n      const response = await axios.get('/Contracts/Search', {\r\n      params: { \r\n        registrationNumberSearchText: paramsData.registrationNumberSearchText,\r\n        contractDateBegin: paramsData.contractDateBegin,\r\n        contractDateEnd: paramsData.contractDateEnd,\r\n        soldAssetAddressAddressSearchText : paramsData.soldAssetAddressAddressSearchText,\r\n        contractNumberSearchText: paramsData.contractNumberSearchText,\r\n        filterDebtorsOnly: paramsData.filterDebtorsOnly,\r\n        soldAssetNameSearchText: paramsData.soldAssetNameSearchText,\r\n \r\n\r\n        buyerNameSearchText: paramsData.buyerNameSearchText,\r\n        buyerSurnameSearchText: paramsData.buyerSurnameSearchText,\r\n        buyerPatronymicSearchText: paramsData.buyerPatronymicSearchText,\r\n        processStatus : paramsData.processStatus \r\n      },\r\n      paramsSerializer: params => { return qs.stringify(params, {arrayFormat: 'repeat'})}\r\n    }); \r\n     console.log(response.data);\r\n     context.commit('setContracts', response.data); \r\n    \r\n    return response;\r\n   } ,\r\n\r\n  //contract\r\n\r\n   async fetchContracts(context, actionQueryString) \r\n   {\r\n     axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token; \r\n     const response = await axios.get(`/Contracts?${actionQueryString}`);  \r\n    context.commit('setNewagreement', response.data); \r\n  } ,\r\n   async addNewagreement( context, obj  )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post('/Contracts', obj);\r\n   context.commit('newContractdata', response.data); \r\n    return response;\r\n  },\r\n  async getContract(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}`);\r\n    context.commit('oneContract', response.data); \r\n    return response;\r\n  },\r\n\r\n  async setContractViewedByUser(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/Contracts/${contractId}/Views`);  \r\n    return response;\r\n  },\r\n\r\n  async getContractReceivers(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}/Receivers`);\r\n      context.commit('conRecivers', response.data); \r\n    return response;\r\n  },\r\n\r\n  async updateContract(context, formData) {\r\n    \r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/Contracts/${formData.id}`, formData );\r\n    context.commit('updateCont', response.data);\r\n    return response;\r\n  },\r\n   \r\n  async getContractHistory(context, contractId) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Contracts/${contractId}/ActivityHistories`);\r\n    context.commit('contractHistory', response.data);\r\n    console.log( response.data);\r\n    return response;\r\n  },\r\n\r\n  async deleteContract(context, obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n   const response = await axios.delete(`/Contracts/${obj.contractId}` , {params: { switchOnlyStatus : obj.switchOnlyStatus }} );\r\n    context.commit('removeContract', obj.contractId);\r\n    return response;\r\n  },\r\n\r\n  //files\r\n\r\n  async fetchContractDocuments(context, contractId) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   const response = await axios.get(`/Contracts/${contractId}/Documents`); \r\n   context.commit('setDocuments', response.data);  \r\n   return response;\r\n  },\r\n  \r\n  async addContractDocuments(context, obj) {\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    axios.defaults.headers.common['Content-Type'] =  'multipart/form-data'\r\n    const response = await  axios.post(`/Contracts/${obj.contractId}/Documents`, obj);\r\n    context.commit('addDocument', response.data); \r\n    return response;\r\n  },\r\n\r\n   async deleteDocument(context ,obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Contracts/${obj.contractId}/Documents/${obj.documentId}`);\r\n    context.commit('removeDocument', obj.documentId);\r\n    \r\n  },\r\n\r\n   async downloadContractDocument(context, obj) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   const response = await axios.get(`/Contracts/${obj.contractId}/Documents/${obj.documentId}/File`); \r\n//   context.commit('setDocuments', response.data);  \r\nconsole.log(response.data);\r\n   return response;\r\n  },\r\n\r\n   // dictionary\r\n   async fetchDictionary(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries'); \r\n    context.commit('setDictionary', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async fetchDictionaryByCode(context, dictionaryCode ){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Dictionaries/${dictionaryCode}`);\r\n    context.commit('setDictionaryByCode', response.data.itemList);  \r\n    return response;\r\n   },\r\n\r\n   async addNewDicCodeItem( context  , formData )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post(`/Dictionaries/${formData.dictionaryCode}/Items`, formData);\r\n    context.commit('newDicItem', response.data); \r\n    return response;\r\n  },\r\n\r\n  async deleteDictionaryItem(context ,obj ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Dictionaries/${obj.dictionaryCode}/Items/${obj.dictionaryItemId}`);\r\n    context.commit('removeDicItem', obj.dictionaryItemId);\r\n    \r\n  },\r\n\r\n   async fetchContType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractType');\r\n    context.commit('setContractType',  response.data.itemList);  \r\n    return response;\r\n   },\r\n\r\n   async fetchContractProcessState(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractProcessState');\r\n    context.commit('setContractProcessState',  response.data.itemList);  \r\n    return response;\r\n   },\r\n   \r\n   async fetchContractLiability(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractLiability');\r\n    context.commit('setContractLiability',  response.data.itemList);  \r\n    return response;\r\n   },\r\n   async fetchCity(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/CityTown');\r\n    context.commit('setCityTown', response.data.itemList);\r\n    return response;\r\n   },\r\n   async fetchCountry(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/Country');\r\n    context.commit('setCountry', response.data.itemList);\r\n    return response;\r\n   },\r\n   async fetchRegion(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/Region');\r\n    context.commit('setRegion', response.data.itemList);\r\n    return response;\r\n   }, \r\n\r\n   async fetchOrganizationUnitType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/OrganizationUnitType');\r\n    context.commit('setOrganizationUnitType', response.data.itemList);\r\n    return response;\r\n   }, \r\n\r\n   async addOrganizationUnit(context,organizationUnitCreateRequest){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post('/OrganizationUnits', organizationUnitCreateRequest);\r\n    // context.commit('addOrgUnit', response.data);\r\n    return response;\r\n   }, \r\n\r\n    \r\n   async fetchContractTaskType(context){\r\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Dictionaries/ContractTaskType');\r\n    context.commit('setTaskType', response.data.itemList);\r\n    return response;\r\n   },\r\n   //seller\r\n   async fetchSellers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Sellers'); \r\n    context.commit('setSellers', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async addSeller( context, obj )\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n   let response = await axios.post('/Sellers', obj );\r\n   context.commit('newSellerdata', response.data); \r\n    return response;\r\n  },\r\n\r\n  async deleteSeller(context,sellerId ) \r\n  { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n    await axios.delete(`/Sellers/${sellerId}`);\r\n    context.commit('removeSeller', sellerId);\r\n  },\r\n //feeTarifs\r\n async fetchFeeTariffs(context) \r\n { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n  const response = await axios.get('/FeeTariffs'); \r\n  context.commit('setFeeTariffs', response.data);  \r\n  console.log( response.data)\r\n  return response;\r\n },\r\n\r\n async addFeeTariffs( context, obj )\r\n {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n let response = await axios.post('/FeeTariffs', obj );\r\n context.commit('newFeeTariffdata', response.data); \r\n  return response;\r\n},\r\n\r\nasync deleteFeeTariffs(context,feeTariffId ) \r\n{ axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n  await axios.delete(`/FeeTariffs/${feeTariffId}`);\r\n  context.commit('removeFeeTariff', feeTariffId);\r\n},\r\n\r\n   //archive\r\n   async cancelContract(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Cancels`, formData);\r\n     return response;\r\n   },\r\n\r\n   async completeContract(context , completeRequest ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${completeRequest.contractId}/Completeds`, completeRequest ); \r\n     return response;\r\n   },\r\n\r\n   async recoverContract(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Recoveries`, formData); \r\n     return response;\r\n   },\r\n\r\n   async sendContract(context , contractSendRequest ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${contractSendRequest.contractId}/Sends`, contractSendRequest); \r\n     return response;\r\n   },\r\n   //payment\r\n   async fetchPayment(context,contractId ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.get(`/Contracts/${contractId}/Payments`);\r\n     context.commit('getPayment', response.data); \r\n      return response;\r\n   },\r\n\r\n   async createPayment(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/Payments`, formData);\r\n     context.commit('crtPayment', response.data);\r\n     return response;\r\n   },\r\n\r\n   async updatePayment(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Contracts/${formData.contractId}/Payments/${formData.paymentId}` , formData );\r\n     context.commit('updPayment', response.data);\r\n     return response;\r\n   },\r\n\r\n   //payment_plan\r\n   async fetchPaymentPlan(context,contractId ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.get(`/Contracts/${contractId}/PaymentPlans`);\r\n     context.commit('getPaymentPlan', response.data); \r\n     console.log(response.data)\r\n     return response\r\n   },\r\n\r\n   async createPaymentPlan(context , formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     let response= await axios.post(`/Contracts/${formData.contractId}/PaymentPlans`, formData);\r\n     context.commit('crtPaymentPlan', response.data);\r\n     return response;\r\n   },\r\n\r\n   async updatePaymentPlan(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Contracts/${formData.contractId}/PaymentPlans/${formData.paymentPlanId}` , formData );\r\n     context.commit('updPaymentPlan', response.data);\r\n     return response;\r\n   },\r\n   //workers\r\n   async fetchWorkers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Hr/Personnels'); \r\n    context.commit('setWorkers', response.data); \r\n   },\r\n \r\n   \r\n   async addWorker( context, obj )\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.post('/Hr/Personnels', obj );\r\n    context.commit('newWorkerdata', response.data); \r\n     return response;\r\n   },\r\n\r\n   async updateWorker( context, formData )\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.put(`/Hr/Personnels/${formData.personnelId}`, formData );\r\n    context.commit('updateWorkerdata', response.data); \r\n     return response;\r\n   },\r\n\r\n   async leaveWorker( context, formData)\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    let response = await axios.post(`/Hr/Personnels/${formData.personnelId}/Leave`, formData ); \r\n  //  return response;\r\n    console.log(response); },\r\n\r\n    async fetchPosition(context) \r\n    { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     const response = await axios.get('/Hr/PersonnelPositions'); \r\n     context.commit('setPosition', response.data); \r\n     console.log( response.data)\r\n    },\r\n\r\n    async fetchPositionCombo(context) \r\n    { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     const response = await axios.get('/Hr/PersonnelPositions/canceled'); \r\n      return response;\r\n    },\r\n\r\n    async cancelPersonnelPos( context, formData)\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     let response = await axios.post(`/Hr/PersonnelPositions/${formData.personnelPositionId}/Cancel`, formData ); \r\n     return response;  \r\n      },\r\n\r\n    async addPosition( context, formData)\r\n    {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n     let response = await axios.post('/Hr/PersonnelPositions', formData);\r\n     context.commit('addPosition', response.data);\r\n     console.log(response.data); },\r\n\r\n   //users\r\n   async fetchUsers(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Users'); \r\n    context.commit('setUsers', response.data);  \r\n    console.log(response.data);\r\n   },\r\n\r\n   async addUser( context, { \"personnelId\":personnelId,\"roleId\":roleId})\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n       const response = await axios.post('/Users', { personnelId, roleId} );\r\n       context.commit('newUserdata', response.data);   \r\n       return response; \r\n   },\r\n\r\n   async fetchUserRoles(context, userId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Users/${userId}/Roles/`); \r\n    context.commit('setUserRoles', response.data);  \r\n   \r\n   },\r\n\r\n   async addUserRoles(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/Users/${formData.userId}/Roles/`, formData);\r\n    context.commit('addUserRole', response.data);    \r\n    return response;\r\n   },\r\n\r\n   async deleteUserRoles(context, ids) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     await axios.delete(`/Users/${ids.userId}/Roles/${ids.roleIds}`);\r\n     context.commit('removeUserRole', ids.roleIds);  \r\n   }, \r\n\r\n   async addRole( context, formData)\r\n   {   axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n       const response = await axios.post('/Roles', formData );\r\n       context.commit('addRole', response.data);   \r\n       return response; \r\n   },\r\n   async updateRole(context, formData ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.put(`/Roles/${formData.roleId}` , formData );\r\n     context.commit('updRole', response.data);\r\n     return response;\r\n   },\r\n\r\n   \r\n   async updateGrantRole(context, obj ) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\r\n     const response= await axios.post(`/Roles/${obj.roleId}/ViewOperations` , obj ); \r\n     return response;\r\n   },\r\n   //filters\r\n  \r\n\r\n   async fetchRoles(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Roles'); \r\n    context.commit('setRoles', response.data);  \r\n    return response;\r\n   },\r\n\r\n   async fetchRoleById(context, roleId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Roles/${roleId}`);  \r\n     return response;\r\n\r\n   },\r\n\r\n   //organizations\r\n\r\n \r\n\r\n   \r\n   async fetchMainOrgs(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Organizations'); \r\n    context.commit('setmainOrgs', response.data); \r\n   },\r\n\r\n   async fetchUnitOrgs(context) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get('/Organizations/1/OrganizationUnits'); \r\n    context.commit('setOrgs', response.data); \r\n    console.log(response.data);\r\n   },\r\n\r\n   async fetchSubOrgs(context, organizationId) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.get(`/Organizations/${organizationId}/SubOrganizations`); \r\n    context.commit('setSubOrgs', response.data); \r\n   return response;\r\n   },\r\n\r\n   async updateOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/Organizations/1`,formData);  \r\n   return response;\r\n   },\r\n\r\n   async updateUnitOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.put(`/OrganizationUnits/${formData.organizationUnitId}`,formData);  \r\n   return response;\r\n   }, \r\n\r\n   async cancelUnitOrgs(context, formData) \r\n   { axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n    const response = await axios.post(`/OrganizationUnits/${formData.organizationUnitId}/Cancel`,formData);  \r\n   return response;\r\n   }, \r\n};\r\n\r\n\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}